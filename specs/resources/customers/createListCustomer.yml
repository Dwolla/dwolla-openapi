get:
  tags:
    - customers
  summary: List and search customers
  description: List and search customers allowing you to filter by email and status, as well as search on key fields such as firstName, lastName, and businessName.
  operationId: listAndSearchCustomers
  x-speakeasy-name-override: list
  x-codeSamples:
    - lang: bash
      source: |
        GET https://api-sandbox.dwolla.com/customers
        Accept: application/vnd.dwolla.v1.hal+json
        Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
    - lang: javascript
      source: |
        // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
        dwolla
          .get("customers", { limit: 10 })
          .then((res) => res.body._embedded["customers"][0].firstName); // => 'Jane'
    - lang: python
      source: |
        # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
        customer = app_token.get('customers', limit = 10)
        customer.body['_embedded']['customers'][0]['firstName'] # => 'Jane'
    - lang: php
      source: |
        <?php
        // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
        $customersApi = new DwollaSwagger\CustomersApi($apiClient);
        $customers = $customersApi->_list(10, 0);
        $customers->_embedded->{'customers'}[0]->firstName; # => "Jane"
        ?>
    - lang: ruby
      source: |
        # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
        customers = app_token.get "customers", limit: 10
        customers._embedded.['customers'][0].firstName # => "Jane"
  parameters:
    - name: limit
      in: query
      description: How many results to return
      required: false
      schema:
        type: integer
    - name: offset
      in: query
      description: How many results to skip
      required: false
      schema:
        type: integer
    - name: search
      in: query
      description: Searches on certain fields
      required: false
      schema:
        type: string
    - name: status
      in: query
      description: Filter by customer status
      required: false
      schema:
        type: string
    - $ref: '../../schemas/common.yml#/components/parameters/Accept'
  responses:
    '200':
      description: successful operation
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/customers/Customers.yml#/Customers'
    '403':
      description: Forbidden
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/common.yml#/components/schemas/ForbiddenError'
post:
  tags:
    - customers
  summary: Create a customer
  description: Create an unverified customer, verified customer, or receive-only user.
  operationId: createCustomer
  x-speakeasy-name-override: create
  x-codeSamples:
    - lang: bash
      source: |
        POST https://api-sandbox.dwolla.com/customers
        Content-Type: application/vnd.dwolla.v1.hal+json
        Accept: application/vnd.dwolla.v1.hal+json
        Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

        {
          "firstName": "Jane",
          "lastName": "Merchant",
          "email": "jmerchant@nomail.net",
          "type": "receive-only",
          "businessName": "Jane Corp llc",
          "ipAddress": "99.99.99.99"
        }
    - lang: javascript
      source: |
        // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
        var requestBody = {
          firstName: "John",
          lastName: "Doe",
          email: "jdoe@nomail.net",
          type: "personal",
          address1: "99-99 33rd St",
          city: "Some City",
          state: "NY",
          postalCode: "11101",
          dateOfBirth: "1970-01-01",
          ssn: "1234"
        };
        dwolla
          .post("customers", requestBody)
          .then((res) => res.headers.get("location")); // => 'https://api-sandbox.dwolla.com/customers/fc451a7a-ae30-4404-aB95-e3553fcd733f'
    - lang: python
      source: |
        # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
        request_body = {
          'firstName': 'John',
          'lastName': 'Doe',
          'email': 'jdoe@nomail.net',
          'type': 'personal',
          'address1': '99-99 33rd St',
          'city': 'Some City',
          'state': 'NY',
          'postalCode': '11101',
          'dateOfBirth': '1970-01-01',
          'ssn': '1234'
        }
        customer = app_token.post('customers', request_body)
        customer.headers['location'] # => 'https://api-sandbox.dwolla.com/customers/fc451a7a-ae30-4404-aB95-e3553fcd733f'
    - lang: php
      source: |
        <?php
        // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
        $customersApi = new DwollaSwagger\CustomersApi($apiClient);
        $new_customer = $customersApi->create([
          'firstName' => 'Account',
          'lastName' => 'Admin',
          'email' => 'accountAdmin@email.com',
          'type' => 'business',
          'address1' => '99-99 33rd St',
          'city' => 'Some City',
          'state' => 'NY',
          'postalCode' => '11101',
          'controller' => [
            'firstName' => 'John',
            'lastName'=> 'Controller',
            'title' => 'CEO',
            'dateOfBirth' => '1990-10-10',
            'ssn' => '1234',
            'address' => [
              'address1' => '18749 18th st',
              'address2' => 'apt 12',
              'city' => 'Des Moines',
              'stateProvinceRegion' => 'IA',
              'postalCode' => '50265',
              'country' => 'US'
            ]
          ],
          'phone' => '5554321234',
          'businessClassification' => '9ed3f670-7d6f-11e3-b1ce-5404a6144203',
          'businessType' => 'llc',
          'businessName' => 'Jane Corp',
          'ein' => '00-0000000'
        ]);
        ?>
    - lang: ruby
      source: |
        # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
        request_body = {
          :firstName => 'Account',
          :lastName => 'Admin',
          :email => 'accountAdmin@email.com',
          :type => 'business',
          :address1 => '99-99 33rd St',
          :city => 'Some City',
          :state => 'NY',
          :postalCode => '11101',
          :controller => {
            :firstName => 'John',
            :lastName => 'Controller',
            :title => 'CEO',
            :dateOfBirth => '1980-01-31',
            :ssn => '1234',
            :address => {
              :address1 => '1749 18th st',
              :address2 => 'apt 12',
              :city => 'Des Moines',
              :stateProvinceRegion => 'IA',
              :postalCode => '50266',
              :country => 'US'
            }
          },
          :businessClassification => '9ed38155-7d6f-11e3-83c3-5404a6144203',
          :businessType => 'llc',
          :businessName => 'Jane Corp',
          :ein => '12-3456789'
        }
        customer = app_token.post "customers", request_body
        customer.response_headers[:location] # => "https://api-sandbox.dwolla.com/customers/62c3aa1b-3a1b-46d0-ae90-17304d60c3d5"
  requestBody:
    required: true
    description: Parameters for customer to be created
    content:
      application/vnd.dwolla.v1.hal+json:
        schema:
          oneOf:
            - $ref: '../../schemas/customers/CreateCustomerRequestBody.yml#/CreateReceiveOnlyRequestBody'
            - $ref: '../../schemas/customers/CreateCustomerRequestBody.yml#/CreateUnverifiedCustomerRequestBody'
            - $ref: '../../schemas/customers/CreateCustomerRequestBody.yml#/CreateVerifiedPersonalRequestBody'
            - $ref: '../../schemas/customers/CreateCustomerRequestBody.yml#/CreateVerifiedSolePropRequestBody'
            - $ref: '../../schemas/customers/CreateCustomerRequestBody.yml#/CreateVerifiedBusinessRequestBody'
  parameters:
    - $ref: '../../schemas/common.yml#/components/parameters/Accept'
  responses:
    '201':
      description: successful operation
      headers:
        Location:
          $ref: '../../schemas/common.yml#/components/headers/Location'
    '400':
      description: Bad Request
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/common.yml#/components/schemas/BadRequestError'
    '403':
      description: forbidden
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: forbidden
              message:
                type: string
                example: Not authorized to create customers.
    '404':
      description: not found
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: notFound
              message:
                type: string
                example: not found.
