get:
  tags:
    - customers
  summary: Retrieve a customer
  description: Retrieve identifying information for a specific customer. The returned data varies by customer type - verified customers include contact details, address information, and verification status, while unverified customers and receive-only users contain basic contact information only.
  operationId: getCustomer
  x-speakeasy-name-override: get
  x-codeSamples:
    - lang: bash
      source: |
        GET https://api-sandbox.dwolla.com/customers/FC451A7A-AE30-4404-AB95-E3553FCD733F
        Accept: application/vnd.dwolla.v1.hal+json
        Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
    - lang: javascript
      source: |
        // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
        dwolla
          .get("customers/FC451A7A-AE30-4404-AB95-E3553FCD733F")
          .then((res) => res.body);
    - lang: python
      source: |
        # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
        customer = app_token.get('customers/FC451A7A-AE30-4404-AB95-E3553FCD733F')
        customer.body
    - lang: php
      source: |
        <?php
        // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
        $customersApi = new DwollaSwagger\CustomersApi($apiClient);
        $customer = $customersApi->getCustomer("FC451A7A-AE30-4404-AB95-E3553FCD733F");
        ?>
    - lang: ruby
      source: |
        # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
        customer = app_token.get "customers/FC451A7A-AE30-4404-AB95-E3553FCD733F"
  parameters:
    - name: id
      in: path
      description: Customer unique identifier
      required: true
      schema:
        type: string
    - $ref: '../../schemas/common.yml#/components/parameters/Accept'
  responses:
    '200':
      description: successful operation
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - $ref: '../../schemas/customers/Customer.yml#/UnverifiedCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/UnverifiedBusinessCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/VerifiedPersonalCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/VerifiedSolePropCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/VerifiedBusinessCustomer'
    '403':
      description: forbidden
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: forbidden
              message:
                type: string
                example: Not authorized to get a customer by id.
    '404':
      description: not found
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: notFound
              message:
                type: string
                example: Customer not found.
post:
  tags:
    - customers
  summary: Update a customer
  description: Update Customer information, upgrade an unverified Customer to a verified Customer, suspend a Customer, deactivate a Customer, reactivate a Customer, and update a verified Customer's information to retry verification.
  operationId: update
  x-codeSamples:
    - lang: bash
      source: |
        POST https://api-sandbox.dwolla.com/customers/FC451A7A-AE30-4404-AB95-E3553FCD733F
        Content-Type: application/json
        Accept: application/vnd.dwolla.v1.hal+json
        Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

        {
          "firstName": "John",
          "lastName": "Doe",
          "email": "johndoe@example.com"
        }
    - lang: javascript
      source: |
        // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
        dwolla
          .post("customers/FC451A7A-AE30-4404-AB95-E3553FCD733F", {
            firstName: "John",
            lastName: "Doe",
            email: "johndoe@example.com"
          })
          .then((res) => res.body);
    - lang: python
      source: |
        # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
        customer = app_token.post('customers/FC451A7A-AE30-4404-AB95-E3553FCD733F', {
            'firstName': 'John',
            'lastName': 'Doe',
            'email': 'johndoe@example.com'
        })
        customer.body
    - lang: php
      source: |
        <?php
        // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
        $customersApi = new DwollaSwagger\CustomersApi($apiClient);
        $customer = $customersApi->updateCustomer("FC451A7A-AE30-4404-AB95-E3553FCD733F", [
            'firstName' => 'John',
            'lastName' => 'Doe',
            'email' => 'johndoe@example.com'
        ]);
        ?>
    - lang: ruby
      source: |
        # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
        customer = app_token.post "customers/FC451A7A-AE30-4404-AB95-E3553FCD733F", {
          firstName: "John",
          lastName: "Doe",
          email: "johndoe@example.com"
        }
  parameters:
    - name: id
      in: path
      description: Customer unique identifier
      required: true
      schema:
        type: string
    - $ref: '../../schemas/common.yml#/components/parameters/Accept'
  requestBody:
    required: true
    description: Parameters for updating a Customer
    content:
      application/json:
        schema:
          oneOf:
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/DeactivateCustomer'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/ReactivateCustomer'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/SuspendCustomer'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/UpdateUnverifiedAndReceiveOnly'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/UpdateVerifiedPersonal'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/UpdateVerifiedBusiness'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/UpgradeToVerifiedPersonal'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/UpgradeToVerifiedBusiness'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/UpgradeToVerifiedSoleProp'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/RetryVerifiedPersonal'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/RetryVerifiedBusiness'
            - $ref: '../../schemas/customers/UpdateCustomer.yml#/RetryVerifiedSoleProp'
  responses:
    '200':
      description: successful operation
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - $ref: '../../schemas/customers/Customer.yml#/UnverifiedCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/UnverifiedBusinessCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/VerifiedPersonalCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/VerifiedSolePropCustomer'
              - $ref: '../../schemas/customers/Customer.yml#/VerifiedBusinessCustomer'
    '400':
      description: bad request
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: badRequest
              message:
                type: string
                example: Duplicate customer or validation error.
    '403':
      description: forbidden
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: forbidden
              message:
                type: string
                example: Not authorized to update a customer.
