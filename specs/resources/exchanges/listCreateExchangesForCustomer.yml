get:
  tags:
    - exchanges
  summary: List exchanges for a customer
  description: Retrieve the list of exchanges associated with a Customer resource.
  operationId: listCustomerExchanges
  x-speakeasy-group: customers.exchanges
  x-speakeasy-name-override: list
  x-codeSamples:
    - lang: bash
      source: |
        GET https://api-sandbox.dwolla.com/customers/9fc74373-a5c7-40e4-aa59-d5f4c86a24ea/exchanges
        Accept: application/vnd.dwolla.v1.hal+json
        Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

        ...

        {
            "_links": {
                "self": {
                    "href": "https://api-sandbox.dwolla.com/exchanges",
                    "type": "application/vnd.dwolla.v1.hal+json",
                    "resource-type": "exchange"
                }
            },
            "_embedded": {
                "exchanges": [
                    {
                        "_links": {
                            "self": {
                                "href": "https://api-sandbox.dwolla.com/exchanges/92822961-3a7f-42c0-b0cc-7ffef05717fa",
                                "type": "application/vnd.dwolla.v1.hal+json",
                                "resource-type": "exchange"
                            },
                            "exchange-partner": {
                                "href": "https://api-sandbox.dwolla.com/exchange-partners/bca8d065-49a5-475b-a6b4-509bc8504d22",
                                "type": "application/vnd.dwolla.v1.hal+json",
                                "resource-type": "exchange-partner"
                            },
                            "funding-sources": {
                                "href": "https://api-sandbox.dwolla.com/funding-sources",
                                "type": "application/vnd.dwolla.v1.hal+json",
                                "resource-type": "funding-source"
                            },
                            "customer": {
                                "href": "https://api-sandbox.dwolla.com/customers/9fc74373-a5c7-40e4-aa59-d5f4c86a24ea",
                                "type": "application/vnd.dwolla.v1.hal+json",
                                "resource-type": "customer"
                            }
                        },
                        "id": "92822961-3a7f-42c0-b0cc-7ffef05717fa",
                        "status": "active",
                        "created": "2022-10-19T17:44:44.864Z"
                    }
                ]
            },
            "total": 1
        }
    - lang: javascript
      source: |
        // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
        var customerUrl = "https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2";

        token.get(`${customerUrl}/exchanges`).then((res) => res.body._embedded["exchanges"][0].id); // => '56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'
    - lang: python
      source: |
        # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
        customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

        exchanges = app_token.get('%s/exchanges' % customer_url)
        exchanges.body['_embedded']['exchanges'][0]['id'] # => '56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'
    - lang: php
      source: |
        <?php
        // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
        $exchangesApi = new ExchangesApi($apiClient);
        $customerUrl = "https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2";

        $exchanges = $exchangesApi->getCustomerExchanges($customerUrl);
        $exchanges->_embedded->{"exchanges"}[0]->id; # => "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
        ?>
    - lang: ruby
      source: |
        # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
        customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

        exchanges = app_token.get "#{customer_url}/exchanges"
        exchanges._embedded['exchanges'][0].id # => "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
  parameters:
    - name: id
      in: path
      description: The ID of the Customer to list exchanges for
      required: true
      schema:
        type: string
    - $ref: '../../schemas/common.yml#/components/parameters/Accept'
  responses:
    '200':
      description: successful operation
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/exchanges/Exchanges.yml#/Exchanges'
    '404':
      description: Not Found
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: NotFound
              message:
                type: string
                example: Customer ID not found. Check Customer ID.
post:
  tags:
    - exchanges
  summary: Create an exchange for a customer
  description: |
    Create an exchange for a customer. The request body will vary based on the exchange partner.
    For Finicity, the request body will include finicity-specific fields.
    For MX Secure Exchange, the request body will include an MX token.
    For MX Open Banking, the request body will include an available connection token.
    For Flinks Secure Exchange, the request body will include a token.
    For Plaid Secure Exchange, the request body will include a processor token.
    For Plaid Open Banking, the request body will include a public token.
  operationId: createCustomerExchange
  x-speakeasy-group: customers.exchanges
  x-speakeasy-name-override: create
  x-codeSamples:
    - lang: bash
      source: |
        POST https://api.dwolla.com/customers/74a207b2-b7b7-4efa-8bf8-582148e7b980/exchanges
        Accept: application/vnd.dwolla.v1.hal+json
        Content-Type: application/vnd.dwolla.v1.hal+json
        Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

        {
            "_links": {
                "exchange-partner": {
                    "href": "https://api.dwolla.com/exchange-partners/f53ffb32-c84f-496a-9d9d-acd100d396ef"
                }
            },
            "token": "somePlaidProcessorToken"
        }

        HTTP/1.1 201 Created
        Location: https://api.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d
    - lang: javascript
      source: |
        // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
        var customerUrl = "https://api.dwolla.com/customers/74a207b2-b7b7-4efa-8bf8-582148e7b980";
        var requestBody = {
          _links: {
            "exchange-partner": {
              href: "https://api.dwolla.com/exchange-partners/f53ffb32-c84f-496a-9d9d-acd100d396ef",
            },
          },
          token: "somePlaidProcessorToken",
        };

        dwolla.post(`${customerUrl}/exchanges`, requestBody).then((res) => res.headers.get("location")); // => 'https://api.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d'
    - lang: python
      source: |
        # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
        customer_url = 'https://api.dwolla.com/customers/74a207b2-b7b7-4efa-8bf8-582148e7b980'
        request_body = {
          '_links': {
            'exchange-partner': {
              'href': 'https://api.dwolla.com/exchange-partners/f53ffb32-c84f-496a-9d9d-acd100d396ef'
            }
          },
          'token': 'somePlaidProcessorToken'
        }

        exchange = app_token.post('%s/exchanges' % customer_url, request_body)
        exchange.headers['location'] # => 'https://api.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d'
    - lang: php
      source: |
        <?php
        // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
        $exchangesApi = new ExchangesApi($apiClient);
        $customerUrl = "https://api.dwolla.com/customers/74a207b2-b7b7-4efa-8bf8-582148e7b980";

        $exchange = $exchangesApi->createCustomerExchange(new CreateExchangeRequest([
            "_links" => [
                "exchange-partner" => [
                    "href" => "https://api.dwolla.com/exchange-partners/f53ffb32-c84f-496a-9d9d-acd100d396ef"
                ]
            ],
            "token" => "somePlaidProcessorToken"
        ]), $customerUrl);

        $exchange; # => https://api.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d
        ?>
    - lang: ruby
      source: |
        # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
        customer_url = 'https://api.dwolla.com/customers/74a207b2-b7b7-4efa-8bf8-582148e7b980'
        request_body = {
          _links: {
            'exchange-partner': {
              href: "https://api.dwolla.com/exchange-partners/f53ffb32-c84f-496a-9d9d-acd100d396ef"
            }
          },
          token: 'somePlaidProcessorToken'
        }

        exchange = app_token.post "#{customer_url}/exchanges", request_body
        exchange.response_headers[:location] # => "https://api.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d"
  parameters:
    - name: id
      in: path
      description: The ID of the customer to create an exchange for
      required: true
      schema:
        type: string
    - $ref: '../../schemas/common.yml#/components/parameters/Accept'
  requestBody:
    required: true
    content:
      application/vnd.dwolla.v1.hal+json:
        schema:
          oneOf:
            - $ref: '../../schemas/exchanges/CreateExchange.yml#/CreateFinicitySecureExchange'
            - $ref: '../../schemas/exchanges/CreateExchange.yml#/CreateMXSecureExchange'
            - $ref: '../../schemas/exchanges/CreateExchange.yml#/CreateMXOpenBankingExchange'
            - $ref: '../../schemas/exchanges/CreateExchange.yml#/CreateFlinksSecureExchange'
            - $ref: '../../schemas/exchanges/CreateExchange.yml#/CreatePlaidSecureExchange'
            - $ref: '../../schemas/exchanges/CreateExchange.yml#/CreatePlaidOpenBankingExchange'
  responses:
    '201':
      description: created
      headers:
        Location:
          $ref: '../../schemas/common.yml#/components/headers/Location'
          example: https://api.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d
    '400':
      description: Bad Request
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - $ref: '../../schemas/exchanges/CreateExchange.yml#/InvalidExchangeToken'
              - $ref: '../../schemas/exchanges/CreateExchange.yml#/InvalidExchange'
    '401':
      description: Unauthorized
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - type: object
                properties:
                  code:
                    type: string
                    example: InvalidExchangeToken
                  message:
                    type: string
                    example: The exchange token is not valid to perform this operation. Either the token is expired or invalid, or the products permissions to the token are invalid or expired.
              - type: object
                properties:
                  code:
                    type: string
                    example: InvalidScope
                  message:
                    type: string
                    example: The scopes for creating an exchange resource for a customer is not enabled for this application. Reach out to Dwolla for more information.
    '404':
      description: Not Found
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/common.yml#/components/schemas/NotFoundError'
