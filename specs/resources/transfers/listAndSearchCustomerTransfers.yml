get:
  tags:
    - transfers
  summary: List and search transfers for a customer
  description: Retrieve and search transfers for a specific Customer with comprehensive filtering and pagination support. Supports searching by customer details (name, email, business name), amount ranges, date ranges, transfer status, and correlation IDs for enhanced transaction discovery. Returns paginated transfer results including status, amounts, metadata, and links to source and destination funding sources. Use this endpoint for transaction history analysis and reconciliation purposes.
  operationId: listCustomerTransfers
  x-speakeasy-group: customers.transfers
  x-speakeasy-name-override: list
  x-codeSamples:
    - lang: bash
      source: |
        GET https://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295/transfers
        Accept: application/vnd.dwolla.v1.hal+json
        Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
    - lang: javascript
      source: |
        // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
        var customerUrl =
          "http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295";

        dwolla
          .get(`${customerUrl}/transfers`)
          .then((res) => res.body._embedded["transfers"][0].status); // => "pending"
    - lang: python
      source: |
        # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
        customer_url = 'http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295'

        transfers = app_token.get('%s/transfers' % customer_url)
        transfers.body['_embedded']['transfers'][0]['status'] # => 'pending'
    - lang: php
      source: |
        <?php
        // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
        $customerUrl = 'http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295';

        $TransfersApi = new DwollaSwagger\TransfersApi($apiClient);

        $transfers = $TransfersApi->getCustomerTransfers($customerUrl);
        $transfers->_embedded->{'transfers'}[0]->status; # => "pending"
        ?>
    - lang: ruby
      source: |
        # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
        customer_url = 'http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295'

        transfers = app_token.get "#{customer_url}/transfers"
        transfers._embedded['transfers'][0].status # => "pending"
  parameters:
    - name: id
      in: path
      description: Customer's unique identifier
      required: true
      schema:
        type: string
    - name: search
      in: query
      description: A string to search on fields `firstName`, `lastName`, `email`, `businessName`
      required: false
      schema:
        type: string
    - name: startAmount
      in: query
      description: Only include transactions with an amount equal to or greater than `startAmount`
      required: false
      schema:
        type: string
    - name: endAmount
      in: query
      description: Only include transactions with an amount equal to or less than `endAmount`
      required: false
      schema:
        type: string
    - name: startDate
      in: query
      description: Only include transactions created after this date. ISO-8601 format `YYYY-MM-DD`
      required: false
      schema:
        type: string
    - name: endDate
      in: query
      description: Only include transactions created before this date. ISO-8601 format `YYYY-MM-DD`
      required: false
      schema:
        type: string
    - name: status
      in: query
      description: Filter on transaction status. Possible values are `pending`, `processed`, `failed`, or `cancelled`
      required: false
      schema:
        type: string
    - name: correlationId
      in: query
      description: A string value to search on if `correlationId` was specified for a transaction
      required: false
      schema:
        type: string
    - name: limit
      in: query
      description: Number of search results to return. Defaults to 25
      required: false
      schema:
        type: string
    - name: offset
      in: query
      description: Number of search results to skip. Use for pagination
      required: false
      schema:
        type: string
    - $ref: '../../schemas/common.yml#/components/parameters/Accept'
  responses:
    '200':
      description: successful operation
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/transfers/Transfers.yml#/Transfers'
    '404':
      description: 404 Not Found
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/common.yml#/components/schemas/NotFoundError'
