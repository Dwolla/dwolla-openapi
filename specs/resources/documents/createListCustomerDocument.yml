get:
  tags:
    - documents
  summary: List documents for customer
  description: List documents for customer
  operationId: listCustomerDocuments
  parameters:
    - name: id
      in: path
      description: customer unique identifier
      required: true
      schema:
        type: string
  responses:
    '200':
      description: successful operation
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '../../schemas/documents/Documents.yml#/Documents'
post:
  tags:
    - documents
  summary: Create a document for customer
  description: Create a document for customer
  operationId: createCustomerDocument
  parameters:
    - name: id
      in: path
      description: customer unique identifier
      required: true
      schema:
        type: string
  requestBody:
    description: Upload a document for a customer.
    required: true
    content:
      multipart/form-data:
        schema:
          type: object
          properties:
            documentType:
              type: string
            file:
              type: string
              format: binary
  responses:
    '201':
      description: successful operation
      headers:
        Location:
          $ref: '../../schemas/common.yml#/components/headers/Location'
    '400':
      description: Bad Request
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - $ref: '../../schemas/common.yml#/components/schemas/MaximumNumberOfResourcesSchema'
              - $ref: '../../schemas/common.yml#/components/schemas/InvalidFileTypeSchema'
              - $ref: '../../schemas/common.yml#/components/schemas/DuplicateResourceSchema'
    '403':
      description: not found
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - $ref: '../../schemas/common.yml#/components/schemas/InvalidResourceStateSchema'
              - $ref: '../../schemas/common.yml#/components/schemas/NotAuthorizedSchema'
    '404':
      description: not found
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: notFound
              message:
                type: string
                example: Customer not found. Check CustomerId.
    '413':
      description: request entity too large
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: fileTooLarge
              message:
                type: string
                example: Document requests are limited to 10 MiB.
