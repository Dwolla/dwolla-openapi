get:
  tags:
    - documents
  summary: List documents for customer
  description: List documents for customer
  operationId: listForCustomer
  parameters:
    - name: id
      in: path
      description: customer unique identifier
      required: true
      schema:
        type: string
  responses:
    '200':
      description: successful operation
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            $ref: '#/components/schemas/ListCustomerDocumentsResponse'
post:
  tags:
    - documents
  summary: Create a document for customer
  description: Create a document for customer
  operationId: createForCustomer
  parameters:
    - name: id
      in: path
      description: customer unique identifier
      required: true
      schema:
        type: string
  requestBody:
    description: Upload a document for a customer.
    required: true
    content:
      multipart/form-data:
        schema:
          type: object
          properties:
            documentType:
              type: string
            file:
              type: string
              format: binary
  responses:
    '201':
      description: document created
      headers: {}
    '400':
      description: Bad Request
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/MaximumNumberOfResourcesSchema'
              - $ref: '#/components/schemas/InvalidFileTypeSchema'
              - $ref: '#/components/schemas/DuplicateResourceSchema'
    '403':
      description: not found
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/InvalidResourceStateSchema'
              - $ref: '#/components/schemas/NotAuthorizedSchema'
    '404':
      description: not found
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: notFound
              message:
                type: string
                example: Customer not found. Check CustomerId.
    '413':
      description: request entity too large
      headers: {}
      content:
        application/vnd.dwolla.v1.hal+json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: fileTooLarge
              message:
                type: string
                example: Document requests are limited to 10 MiB.
components:
  schemas:
    ListCustomerDocumentsResponse:
      title: ListCustomerDocumentsResponse
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '../../schemas/commonSchemas.yml#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            documents:
              type: array
              items:
                $ref: './retrieveDocument.yml#/components/schemas/RetrieveDocumentResponse'
    MaximumNumberOfResourcesSchema:
      title: MaximumNumberOfResourcesSchema
      type: object
      properties:
        code:
          type: string
          example: maximumNumberOfResources
        message:
          type: string
          example: Max of four files upload allowed. Please wait for Dwolla to manually check the documents.
    InvalidFileTypeSchema:
      title: InvalidFileTypeSchema
      type: object
      properties:
        code:
          type: string
          example: invalidFileType
        message:
          type: string
          example: 'File types supported: Personal IDs - .jpg, .jpeg or .png. Business Documents - .jpg, .jpeg, .png, or .pdf.'
    DuplicateResourceSchema:
      title: DuplicateResourceSchema
      type: object
      properties:
        code:
          type: string
          example: duplicateResource
        message:
          type: string
          example: Document already exists. Follow the link to find the existing document for the Customer.
    InvalidResourceStateSchema:
      title: InvalidResourceStateSchema
      type: object
      properties:
        code:
          type: string
          example: invalidResourceState
        message:
          type: string
          example: Resource cannot be modified. Document creation not allowed for already verified Customers or non-verified Customer types.
    NotAuthorizedSchema:
      title: NotAuthorizedSchema
      type: object
      properties:
        code:
          type: string
          example: notAuthorized
        message:
          type: string
          example: Not authorized to create documents.
