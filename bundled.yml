openapi: 3.0.3
info:
  title: Dwolla API
  description: Dwolla API Documentation
  contact:
    name: Dwolla Developer Relations Team
    url: 'https://developers.dwolla.com'
    email: api@dwolla.com
  version: '2.0'
  termsOfService: 'https://www.dwolla.com/legal/tos/'
  license:
    name: MIT
    url: 'https://github.com/Dwolla/dwolla-openapi/blob/master/LICENSE'
servers:
  - url: 'https://api.dwolla.com'
    description: Production server
  - url: 'https://api-sandbox.dwolla.com'
    description: Sandbox server
paths:
  /token:
    post:
      tags:
        - tokens
      summary: Create an application access token
      description: Generates an access token that contains permissions scoped to the application owner's Dwolla Client Account.
      operationId: createApplicationAccessToken
      security:
        - basicAuth: []
      requestBody:
        description: OAuth get token request
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
              properties:
                grant_type:
                  type: string
                  example: client_credentials
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: gTm0p62yYXFiB1rOdhV0TsNOinC2V2P1CMaAtojkO9JEGbv3i5
                  token_type:
                    type: string
                    example: bearer
                  expires_in:
                    type: integer
                    example: 3599
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client
  /:
    get:
      tags:
        - root
      summary: root
      description: Entry point to the Dwolla API
      operationId: root
      responses:
        200 OK:
          description: sucessful operation
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1/components/schemas/RootResponse'
        401 Unauthorized:
          description: unauthorized
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidAccessToken
                  message:
                    type: string
                    example: Invalid access token.
      deprecated: false
    components:
      schemas:
        RootResponse:
          title: RootResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                title: HalLink
                type: object
                properties:
                  href:
                    type: string
                    example: 'https://api.dwolla.com'
                  type:
                    type: string
                    example: application/vnd.dwolla.v1.hal+json
                  resource-type:
                    type: string
                    example: resource-type
  '/accounts/{id}':
    get:
      tags:
        - account
      summary: Retrieve Account Details
      description: Retrieve Account Details
      operationId: get
      parameters:
        - name: id
          in: path
          description: Account's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/components/schemas/RetrieveAccountDetailsResponse'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to retrieve an Account by id.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                title: 404NotFoundErrorResponse
                description: Error response schema for 404 NotFound
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: The requested resource was not found.
    components:
      schemas:
        RetrieveAccountDetailsResponse:
          title: RetrieveAccountDetailsResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            id:
              type: string
              example: 2e21f010-3023-4891-aced-ed726d7cd5e1
            name:
              type: string
              example: Self Employed
            authorizedRep:
              type: string
              example: Jane Doe
            timezoneOffset:
              type: integer
              example: -6
            email:
              type: string
              example: janedoe@mail.com
            phone:
              type: string
              example: '5555552368'
            address:
              title: Address
              type: object
              required:
                - address1
                - city
                - country
                - postalCode
                - state
              properties:
                address1:
                  type: string
                  example: 462 Main Street
                address2:
                  type: string
                  example: Suite 124
                city:
                  type: string
                  example: Des Moines
                postalCode:
                  type: string
                  example: '50309'
                state:
                  type: string
                  example: IA
            verificationStatus:
              type: string
              example: Verified
            ownershipStatus:
              type: string
              example: Exempt
            ownershipCertificationStatus:
              type: string
              example: Exempt
            type:
              type: string
              example: Commercial
            created:
              type: string
              example: '2021-10-25T00:39:38.283Z'
  /funding-sources:
    post:
      tags:
        - account
      summary: Create a funding source for an account
      description: Create a funding source for an account
      operationId: createAccountFundingSource
      requestBody:
        description: Parameters for the funding source to be created
        content:
          application/json:
            schema:
              required:
                - accountNumber
                - routingNumber
                - bankAccountType
                - name
              type: object
              properties:
                accountNumber:
                  type: string
                routingNumber:
                  type: string
                bankAccountType:
                  type: string
                name:
                  type: string
                channels:
                  type: array
      responses:
        '201':
          description: successful operation
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '400':
          oneOf:
            - $ref: '#/paths/~1funding-sources/components/schemas/BadRequestSchema'
            - $ref: '#/paths/~1funding-sources/components/schemas/DuplicateResourceSchema'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to create funding source.
    components:
      schemas:
        BadRequestSchema:
          title: BadRequestSchema
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                code:
                  type: string
                  example: ValidationError
                message:
                  type: string
                  example: Validation error(s) present. See embedded errors list for more details.
        DuplicateResourceSchema:
          title: DuplicateResourceSchema
          type: string
          example: DuplicateResource
        message:
          type: string
          example: 'Bank already exists: id=df8392e5-4c06-42ed-b247-c098ed6f5a11'
        _links:
          type: object
          properties:
            about:
              type: object
              properties:
                href:
                  type: string
                  example: 'https://api-sandbox.dwolla.com/funding-sources/df8392e5-4c06-42ed-b247-c098ed6f5a11'
                type:
                  type: string
                  example: application/vnd.dwolla.v1.hal+json
                resource-type:
                  type: string
                  example: funding-source
  '/accounts/{id}/funding-sources':
    get:
      tags:
        - account
      summary: List funding sources for an account
      description: List funding source for an account
      operationId: listAccountFundingSources
      parameters:
        - name: id
          in: path
          description: Account's unique identifier
          required: true
          schema:
            type: string
        - name: removed
          in: query
          description: Filter removed funding sources. Boolean value. Defaults to `true`
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D~1funding-sources/components/schemas/ListAccountFundingSources'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to list funding sources.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Account not found.
    components:
      schemas:
        ListAccountFundingSources:
          title: ListAccountFundingSources
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                funding-sources:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        additionalProperties:
                          $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                      id:
                        type: string
                        example: d3d6b41e-5567-4bc6-9c6e-0efd0a3e647e
                      status:
                        type: string
                        example: unverified
                      type:
                        type: string
                        example: bank
                      bankAccountType:
                        type: string
                        example: checking
                      name:
                        type: string
                        example: My bank
                      created:
                        type: string
                        example: '2022-07-23T00:18:21.419Z'
                      removed:
                        type: Boolean
                        example: true
                      channels:
                        type: array
                        items:
                          type: string
                          example: ach
  '/accounts/{id}/transfers':
    get:
      tags:
        - account
      summary: List and search transers for an account
      description: List and search transers for an account
      operationId: listAndSearchAccountTransfers
      parameters:
        - name: id
          in: path
          description: Account's unique identifier
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: 'A string to search on fields `firstName`, `lastName`, `email`, `businessName`, Customer ID, and Account ID'
          required: false
          schema:
            type: string
        - name: startAmount
          in: query
          description: Only include transactions with an amount equal to or greater than `startAmount`
          required: false
          schema:
            type: string
        - name: endAmount
          in: query
          description: Only include transactions with an amount equal to or less than `endAmount`
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: Only include transactions created after this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: Only include transactions created before this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: 'Filter on transaction status. Possible values are `pending`, `processed`, `failed`, or `cancelled`'
          required: false
          schema:
            type: string
        - name: correlationId
          in: query
          description: A string value to search on if `correlationId` was specified for a transaction
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of search results to return. Defaults to 25
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Number of search results to skip. Use for pagination
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D~1transfers/components/schemas/ListAndSearchAccountTransfersResponse'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Account not found.
    components:
      schemas:
        ListAndSearchAccountTransfersResponse:
          title: ListAndSearchAccountTransfersResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                transfers:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        type: object
                        additionalProperties:
                          $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                      id:
                        type: string
                        example: 37b16b5f-187a-ec11-813d-ca84ae5ee1fb
                      status:
                        type: string
                        example: processed
                      amount:
                        $ref: '#/paths/~1transfers/post/requestBody/content/application~1json/schema/properties/amount'
                      created:
                        type: string
                        example: '2022-01-20T17:42:52.787Z'
                      correlationId:
                        type: string
                        example: CID-8a2cdc8d-629d-4a24-98ac-40b735229fe2
            total:
              type: integer
              example: 100
  '/accounts/{id}/mass-payments':
    get:
      tags:
        - account
      summary: List mass payments for an account
      description: List mass payments for an account
      operation: ListAccountMassPayments
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            default: 25
            example: 25
        - name: offset
          in: query
          description: How many results to skip.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            default: 0
            example: 0
        - name: correlationId
          in: query
          description: Correlation ID to search by.
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D~1mass-payments/components/schema/ListAccountMassPaymentsResponse'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to list mass payments.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Account not found.
    components:
      schema:
        ListAccountMassPaymentsResponse:
          title: ListAccountMassPaymentsResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                mass-payments:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        type: object
                        additionalProperties:
                          $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                      id:
                        type: string
                        example: 11ac4051-7b76-44fc-87ab-ae23012393f0
                      status:
                        type: string
                        example: complete
                      created:
                        type: string
                        example: '2022-01-20T17:41:41.000Z'
                      metaData:
                        type: object
                      total:
                        $ref: '#/paths/~1transfers/post/requestBody/content/application~1json/schema/properties/amount'
                      totalFees:
                        $ref: '#/paths/~1transfers/post/requestBody/content/application~1json/schema/properties/amount'
                      correlationId:
                        type: string
                        example: CID-8a2cdc8d-629d-4a24-98ac-40b735229fe2
  /customers:
    get:
      tags:
        - customers
      summary: List and search customers
      description: List and search customer
      operationId: list
      parameters:
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Searches on certain fields
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by customer status
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1customers/components/schemas/ListCustomersResponse'
    post:
      tags:
        - customers
      summary: Create a customer
      description: Create a customer
      operationId: create
      requestBody:
        description: Parameters for customer to be created
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1customers/components/requestBodies/CreateReceiveOnly'
                - $ref: '#/paths/~1customers/components/requestBodies/CreateUnverified'
                - $ref: '#/paths/~1customers/components/requestBodies/CreateVerifiedPersonal'
                - $ref: '#/paths/~1customers/components/requestBodies/CreateVerifiedSoleProp'
                - $ref: '#/paths/~1customers/components/requestBodies/CreateVerifiedBusiness'
      responses:
        '201':
          description: successful operation
          headers:
            Location:
              type: string
              description: URL location of newly created resource.
        '400':
          description: Bad Resuest
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                title: 400BadRequestErrorResponse
                description: Error response schema for 400 Bad Request
                type: object
                properties:
                  code:
                    type: string
                    example: BadRequest
                  message:
                    type: string
                    example: The request body contains bad syntax or is incomplete.
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to create customers.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: not found.
    components:
      schemas:
        ListCustomersResponse:
          title: ListCustomersResponse
          type: object
          properties:
            _links:
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                customers:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        additionalProperties:
                          $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                      id:
                        type: string
                        example: c41125c5-99c4-4303-a9f6-d066d28a61e3
                      firstName:
                        type: string
                        example: Jane
                      lastName:
                        type: string
                        example: Doe
                      email:
                        type: string
                        example: janedoe@mail.com
                      type:
                        type: string
                        example: unverified
                      status:
                        type: string
                        example: unverified
                      created:
                        type: string
                        example: '2022-06-03T16:39:40.457Z'
                      address1:
                        type: string
                        example: 123 Main Street
                      city:
                        type: string
                        example: Des Moines
                      state:
                        type: string
                        example: IA
                      postalCode:
                        type: string
                        example: '50309'
                      correlationId:
                        type: string
                        example: CID-8a2cdc8d-629d-4a24-98ac-40b735229fe2
        UnverifiedCustomerSharedModel:
          Description: Shared models between all Customer types
          type: object
          required:
            - firstName
            - lastName
            - email
          properties:
            firstName:
              type: string
              example: Account
            lastName:
              type: string
              example: Admin
            email:
              type: string
              example: accountAdmin@email.com
            ipAddress:
              type: string
              example: 143.156.7.8
            phone:
              type: string
              example: 5555555555
            correlationId:
              type: string
              example: fc451a7a-ae30-4404-aB95-e3553fcd733
        VerifiedCustomerSharedModel:
          Description: Shared models between Verified customers
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - type: object
              required:
                - address1
                - city
                - state
                - postalCode
                - dateOfBirth
                - ssn
              properties:
                address1:
                  type: string
                  example: 99-99 33rd St
                address2:
                  type: string
                  example: 99-99 33rd St
                city:
                  type: string
                  example: Some City
                state:
                  type: string
                  example: NY
                postalCode:
                  type: string
                  example: 11101
        BusinessCustomerSharedModel:
          Description: Shared models between Business Verified Customers
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - type: object
              required:
                - type
                - businessName
                - businessClassification
                - ein
              properties:
                type:
                  type: string
                  example: business
                businessClassification:
                  type: string
                  example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
                businessName:
                  type: string
                  example: Jane Corp
                doingBusinessAs:
                  type: string
                  example: Jane's Electronics
                ein:
                  type: string
                  example: 00-0000000
                website:
                  type: string
                  example: 'https://www.domain.com'
        ControllerSharedModel:
          type: object
          required:
            - firstName
            - lastName
            - title
            - dateOfBirth
            - address
          properties:
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Controller
            title:
              type: string
              example: CEO
            dateOfBirth:
              type: string
              format: date
              example: 1980-01-31T00:00:00.000Z
            address:
              title: InternationalAddress
              type: object
              required:
                - address1
                - city
                - country
                - stateProvinceRegion
              properties:
                address1:
                  type: string
                  example: 462 Main Street
                address2:
                  type: string
                  example: Suite 123
                address3:
                  type: string
                  example: Unit 123
                city:
                  type: string
                  example: Des Moines
                postalCode:
                  type: string
                  example: '50309'
                country:
                  type: string
                  example: USA
                stateProvinceRegion:
                  type: string
                  example: IA
        ControllerWithSsn:
          title: ControllerWithSsn
          description: Controller object with SSN
          type: object
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/ControllerSharedModel'
            - type: object
              required:
                - ssn
              properties:
                ssn:
                  type: string
                  example: '1234'
        ControllerWithPassport:
          title: ControllerWithPassport
          description: Controller object with Passport
          type: object
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/ControllerSharedModel'
            - type: object
              required:
                - passport
              properties:
                passport:
                  title: Passport
                  type: object
                  required:
                    - number
                    - country
                  properties:
                    number:
                      type: string
                    country:
                      type: string
        ValidationErrorSchema:
          title: ValidationErrorSchema
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                code:
                  type: string
                  example: ValidationError
                message:
                  type: string
                  example: Validation error(s) present. See embedded errors list for more details.
      requestBodies:
        CreateReceiveOnly:
          title: CreateReceiveOnly
          description: Create a Recieve Only User
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - type: object
              required:
                - type
              properties:
                type:
                  type: string
                  example: receive-only
                businessName:
                  type: string
                  example: Jane Corp llc
        CreateUnverified:
          title: CreateUnverified
          description: Create an Unverified Customer
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - type: object
              properties:
                businessName:
                  type: string
                  example: Jane Corp llc
        CreateVerifiedPersonal:
          title: CreateVerifiedPersonal
          description: Create a Verified Personal customer
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - type: object
              required:
                - type
                - ssn
              properties:
                type:
                  type: string
                  example: personal
                ssn:
                  type: string
                  example: 1234
                dateOfBirth:
                  type: string
                  example: 1980-09-12T00:00:00.000Z
        CreateVerifiedBusiness:
          title: CreateVerifiedBusiness
          description: Create a Verified Business customer
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/BusinessCustomerSharedModel'
            - type: object
              required:
                - businessType
                - controller
              properties:
                controller:
                  oneOf:
                    - $ref: '#/paths/~1customers/components/schemas/ControllerWithSsn'
                    - $ref: '#/paths/~1customers/components/schemas/ControllerWithPassport'
                businessType:
                  type: string
                  example: llc
        CreateVerifiedSoleProp:
          title: CreateVerifiedSoleProp
          description: Create a Verified Business customer (Sole Proprietorship)
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/BusinessCustomerSharedModel'
            - type: object
              required:
                - businessType
                - ssn
                - dateOfBirth
              properties:
                ssn:
                  type: string
                  example: 1234
                dateOfBirth:
                  type: string
                  example: 1980-09-12T00:00:00.000Z
                businessType:
                  type: string
                  example: soleProprietorship
  '/customers/{id}':
    get:
      tags:
        - customers
      summary: Retrieve a customer
      description: Retrieve a customer
      operationId: get
      parameters:
        - name: id
          in: path
          description: Customer unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveReceiveOnlyCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveUnverifiedCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveVerifiedPersonalCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveVerifiedSolePropCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveVerifiedBusinessCustomerResponse'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to get a customer by id.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Customer not found.
    post:
      tags:
        - customers
      summary: Update a customer
      description: Update a customer
      operationId: update
      requestBody:
        description: Parameters for updating a Customer
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/DeactivateCustomer'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/ReactivateCustomer'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/SuspendCustomer'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/UpdateUnverifiedAndRecieveOnly'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/UpdateVerifiedPersonal'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/UpdateVerifiedBusiness'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/UpgradeToVerifiedPersonal'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/UpgradeToVerifiedBusiness'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/UpgradeToVerifiedSoleProp'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/RetryVerifiedPersonal'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/RetryVerifiedBusiness'
                - $ref: '#/paths/~1customers~1%7Bid%7D/components/requestBodies/RetryVerifiedSoleProp'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveReceiveOnlyCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveUnverifiedCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveVerifiedPersonalCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveVerifiedSolePropCustomerResponse'
                  - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveVerifiedBusinessCustomerResponse'
        '400':
          description: bad request
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: badRequest
                  message:
                    type: string
                    example: Duplicate customer or validation error.
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to update a customer.
    components:
      schemas:
        RetrieveCustomerSharedModel:
          title: RetrieveCustomerSharedModel
          Description: Shared models between all Customer types
          type: object
          properties:
            _links:
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            id:
              type: string
              example: c41125c5-99c4-4303-a9f6-d066d28a61e3
            firstName:
              type: string
              example: Jane
            lastName:
              type: string
              example: Doe
            email:
              type: string
              example: janedoe@mail.com
            correlationId:
              type: string
              example: CID-abe2bb3d-d2ff-433b-95a3-0debd960ed25
            created:
              type: string
              example: '2022-10-07T16:46:13.023Z'
        RetrieveReceiveOnlyCustomerResponse:
          title: RetrieveReceiveOnlyCustomerResponse
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveCustomerSharedModel'
            - type: object
              properties:
                type:
                  type: string
                  example: receive-only
                status:
                  type: string
                  example: unverified
                businessName:
                  type: string
                  example: Jane Corp llc
        RetrieveUnverifiedCustomerResponse:
          title: RetrieveUnverifiedCustomerResponse
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveCustomerSharedModel'
            - type: object
              properties:
                type:
                  type: string
                  example: unverified
                status:
                  type: string
                  example: unverified
                businessName:
                  type: string
                  example: Jane Corp llc
        RetrieveVerifiedPersonalCustomerResponse:
          title: RetrieveVerifiedPersonalCustomerResponse
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveCustomerSharedModel'
            - type: object
              properties:
                type:
                  type: string
                  example: personal
                status:
                  type: string
                  example: verified
                address1:
                  type: string
                  example: 123 Main Street
                address2:
                  type: string
                  example: Ste 123
                city:
                  type: string
                  example: Des Moines
                state:
                  type: string
                  example: IA
                postalCode:
                  type: string
                  example: '50309'
        RetrieveVerifiedSolePropCustomerResponse:
          title: RetrieveVerifiedSolePropCustomerResponse
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveCustomerSharedModel'
            - type: object
              properties:
                type:
                  type: string
                  example: business
                status:
                  type: string
                  example: verified
                address1:
                  type: string
                  example: 123 Main Street
                address2:
                  type: string
                  example: Ste 123
                city:
                  type: string
                  example: Des Moines
                state:
                  type: string
                  example: IA
                postalCode:
                  type: string
                  example: '50309'
                businessName:
                  type: string
                  example: Jane Corp
                businessType:
                  type: string
                  example: soleProprietorship
                businessClassification:
                  type: string
                  example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        RetrieveVerifiedBusinessCustomerResponse:
          title: RetrieveVerifiedBusinessCustomerResponse
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/RetrieveCustomerSharedModel'
            - type: object
              properties:
                type:
                  type: string
                  example: business
                status:
                  type: string
                  example: verified
                address1:
                  type: string
                  example: 123 Main Street
                address2:
                  type: string
                  example: Ste 123
                city:
                  type: string
                  example: Des Moines
                state:
                  type: string
                  example: IA
                postalCode:
                  type: string
                  example: '50309'
                phone:
                  type: string
                  example: '555555555'
                website:
                  type: string
                  example: 'https://www.dwolla.com'
                businessName:
                  type: string
                  example: Jane Corp
                doingBusinessAs:
                  type: string
                  example: Jane's Coffee and Sweets
                businessType:
                  type: string
                  example: llc
                businessClassification:
                  type: string
                  example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
                controller:
                  type: object
                  $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/ControllerObject'
        ControllerObject:
          title: ControllerObject
          Description: Controller JSON Object for Customer responses
          type: object
          properties:
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Controller
            title:
              type: string
              example: CEO
            address:
              type: object
              properties:
                address1:
                  type: string
                  example: 462 Main Street
                address2:
                  type: string
                  example: Suite 123
                address3:
                  type: string
                  example: Unit 123
                city:
                  type: string
                  example: Des Moines
                postalCode:
                  type: string
                  example: '50309'
                country:
                  type: string
                  example: USA
                stateProvinceRegion:
                  type: string
                  example: IA
        UpdateVerifiedCustomerSharedModel:
          Description: Shared models between Verified Customer types
          type: object
          properties:
            email:
              type: string
              example: accountAdmin@email.com
            ipAddress:
              type: string
              example: 143.156.7.8
            address1:
              type: string
              example: 123 Main Street
            address2:
              type: string
              example: XYZ Suite
            city:
              type: string
              example: Des Moines
            state:
              type: string
              example: IA
            postalCode:
              type: string
              example: '50309'
            phone:
              type: string
              example: 5555555555
      requestBodies:
        DeactivateCustomer:
          title: DeactivateCustomer
          description: Deactivate a Customer
          type: object
          required:
            - status
          properties:
            status:
              type: string
              example: deactivated
        ReactivateCustomer:
          title: ReactivateCustomer
          description: Reactivate a Customer
          type: object
          required:
            - status
          properties:
            status:
              type: string
              example: reactivated
        SuspendCustomer:
          title: SuspendCustomer
          description: Suspend a Customer
          type: object
          required:
            - status
          properties:
            status:
              type: string
              example: suspended
        UpdateUnverifiedAndRecieveOnly:
          title: UpdateUnverifiedAndRecieveOnly
          description: Update Unverified Customer or Recieve Only User Information
          type: object
          properties:
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Doe
            email:
              type: string
              example: accountAdmin@email.com
            businessName:
              type: string
              example: Jane Corp
        UpdateVerifiedPersonal:
          title: UpdateVerifiedPersonal
          description: Update Verified Personal Customer Information
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/UpdateVerifiedCustomerSharedModel'
        UpdateVerifiedBusiness:
          title: UpdateVerifiedBusiness
          description: Update Verified Business Customer Information (both Sole Proprietorship and Non-Sole Proprietorship)
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D/components/schemas/UpdateVerifiedCustomerSharedModel'
            - type: object
              properties:
                doingBusinessAs:
                  type: string
                  example: Jane's Electronics
                website:
                  type: string
                  example: 'https://www.domain.com'
        UpgradeToVerifiedPersonal:
          title: UpgradeToVerifiedPersonal
          description: Upgrade Unverified Customer to Verified Personal Customer
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - type: object
              required:
                - type
                - ssn
              properties:
                type:
                  type: string
                  example: personal
                ssn:
                  type: string
                  example: 1234
                dateOfBirth:
                  type: string
                  example: 1980-09-12T00:00:00.000Z
        UpgradeToVerifiedBusiness:
          title: UpgradeToVerifiedBusiness
          description: Upgrade Unverified Customer to Verified Business Customer
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/BusinessCustomerSharedModel'
            - type: object
              required:
                - businessType
                - controller
              properties:
                controller:
                  oneOf:
                    - $ref: '#/paths/~1customers/components/schemas/ControllerWithSsn'
                    - $ref: '#/paths/~1customers/components/schemas/ControllerWithPassport'
                businessType:
                  type: string
                  example: llc
        UpgradeToVerifiedSoleProp:
          title: UpgradeToVerifiedSoleProp
          description: Upgrade Unverified Customer to Verified Business Customer (Sole Proprietorship)
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/BusinessCustomerSharedModel'
            - type: object
              required:
                - businessType
                - ssn
                - dateOfBirth
              properties:
                ssn:
                  type: string
                  example: 1234
                dateOfBirth:
                  type: string
                  example: 1980-09-12T00:00:00.000Z
                businessType:
                  type: string
                  example: soleProprietorship
        RetryVerifiedPersonal:
          title: RetryVerifiedPersonal
          description: Retry Verification for Verified Personal Customer
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - type: object
              required:
                - type
                - ssn
              properties:
                type:
                  type: string
                  example: personal
                ssn:
                  type: string
                  example: 123456789
                dateOfBirth:
                  type: string
                  example: 1980-09-12T00:00:00.000Z
        RetryVerifiedBusiness:
          title: RetryVerifiedBusiness
          description: Retry Verification for Verified Business Customer
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/BusinessCustomerSharedModel'
            - type: object
              required:
                - businessType
                - controller
              properties:
                controller:
                  oneOf:
                    - $ref: '#/paths/~1customers/components/schemas/ControllerWithSsn'
                    - $ref: '#/paths/~1customers/components/schemas/ControllerWithPassport'
                businessType:
                  type: string
                  example: llc
        RetryVerifiedSoleProp:
          title: RetryVerifiedSoleProp
          description: Retry Verification for Verified Business Customer (Sole Proprietorship)
          allOf:
            - $ref: '#/paths/~1customers/components/schemas/UnverifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/VerifiedCustomerSharedModel'
            - $ref: '#/paths/~1customers/components/schemas/BusinessCustomerSharedModel'
            - type: object
              required:
                - businessType
                - ssn
                - dateOfBirth
              properties:
                ssn:
                  type: string
                  example: 123456789
                dateOfBirth:
                  type: string
                  example: 1980-09-12T00:00:00.000Z
                businessType:
                  type: string
                  example: soleProprietorship
  /business-classifications:
    get:
      tags:
        - customers
      summary: List business classification
      description: List business classifications
      operationId: listBusinessClassifications
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                  _embedded:
                    type: object
                    properties:
                      business-classifications:
                        type: array
                        items:
                          $ref: '#/paths/~1business-classifications~1%7Bid%7D/components/schemas/RetrieveBusinessClassificationResponse'
  '/business-classifications/{id}':
    get:
      tags:
        - customers
      summary: Retrieve a business classification
      description: Retrieve a business classification
      operationId: retrieveBusinessClassification
      parameters:
        - name: id
          in: path
          description: business classification unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1business-classifications~1%7Bid%7D/components/schemas/RetrieveBusinessClassificationResponse'
    components:
      schemas:
        RetrieveBusinessClassificationResponse:
          title: retrieveBusinessClassification
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                industry-classifications:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9ed3f66b-7d6f-11e3-95ac-5404a6144203
                      name:
                        type: string
                        example: Wineries
            id:
              type: string
              example: 9ed3f669-7d6f-11e3-b545-5404a6144203
            name:
              type: string
              example: Food retail and service
  '/customers/{id}/beneficial-owners':
    get:
      tags:
        - beneficial owners
      summary: List beneficial owners
      description: List beneficial owners
      operationId: listForCustomer
      parameters:
        - name: id
          in: path
          description: Customer unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-owners/components/schemas/ListBeneficialOwnerResponse'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: not_found
                  message:
                    type: string
                    example: not found.
    post:
      tags:
        - beneficial owners
      summary: Create beneficial owner
      description: Create beneficial owner
      operationId: createForCustomer
      parameters:
        - name: id
          in: path
          description: Customer ID for which to create a Beneficial Owner
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Parameters for creating a beneficial owner
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-owners/components/requestBodies/BeneficialOwnerWithSsn'
                - $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-owners/components/requestBodies/BeneficialOwnerWithPassport'
      responses:
        '201':
          description: successful operation
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
    components:
      schemas:
        ListBeneficialOwnerResponse:
          title: ListBeneficialOwnerResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                beneficial-owners:
                  type: array
                  items:
                    $ref: '#/paths/~1beneficial-owners~1%7Bid%7D/components/schemas/BeneficialOwnerResponse'
        BeneficialOwnerRequestSharedModel:
          description: Shareed Request body model for creating a Beneficial Owner
          required:
            - firstName
            - lastName
            - dateOfBirth
            - address
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            dateOfBirth:
              type: string
            address:
              $ref: '#/paths/~1customers/components/schemas/ControllerSharedModel/properties/address'
      requestBodies:
        BeneficialOwnerWithSsn:
          title: BeneficialOwnerWithSsn
          description: Request body for creating and updating a Beneficial Owner with an SSN
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-owners/components/schemas/BeneficialOwnerRequestSharedModel'
            - type: object
              required:
                - ssn
              properties:
                ssn:
                  type: string
        BeneficialOwnerWithPassport:
          title: BeneficialOwnerWithPassport
          description: Request body for creating and updating a Beneficial Owner with a Passport
          allOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-owners/components/schemas/BeneficialOwnerRequestSharedModel'
            - type: object
              required:
                - passport
              properties:
                passport:
                  $ref: '#/paths/~1customers/components/schemas/ControllerWithPassport/allOf/1/properties/passport'
  '/beneficial-owners/{id}':
    get:
      tags:
        - beneficial owners
      summary: Retrieve beneficial owner
      description: Retrieve beneficial owner
      operationId: retrieveBeneficialOwner
      parameters:
        - name: id
          in: path
          description: Beneficial owner unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1beneficial-owners~1%7Bid%7D/components/schemas/BeneficialOwnerResponse'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: not_found
                  message:
                    type: string
                    example: not found.
    post:
      tags:
        - beneficial owners
      summary: Update beneficial owner
      description: Update beneficial owner
      operationId: update
      parameters:
        - name: id
          in: path
          description: Beneficial owner unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for updating a beneficial owner
        content:
          application/json:
            schema:
              $oneOf:
                - $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-owners/components/requestBodies/BeneficialOwnerWithSsn'
                - $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-owners/components/requestBodies/BeneficialOwnerWithPassport'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1beneficial-owners~1%7Bid%7D/components/schemas/BeneficialOwnerResponse'
        '400':
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                code:
                  type: string
                  example: ValidationError
                message:
                  type: string
                  example: Validation error(s) present. See embedded errors list for more details.
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to update beneficial owner.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: owner not found.
    delete:
      tags:
        - beneficial owners
      summary: Delete beneficial owner
      description: Delete beneficial owner
      operationId: remove
      parameters:
        - name: id
          in: path
          description: Beneficial owner unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: not_found
                  message:
                    type: string
                    example: Beneficial owner not found.
    components:
      schemas:
        BeneficialOwnerResponse:
          title: BeneficialOwnerResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            id:
              type: string
              example: 55469604-40ab-44b6-962f-de2c0837ba98
            firstName:
              type: string
              example: Janice
            lastName:
              type: string
              example: Doe
            address:
              $ref: '#/paths/~1customers/components/schemas/ControllerSharedModel/properties/address'
            verificationStatus:
              type: string
              example: document
  '/customers/{id}/beneficial-ownership':
    get:
      tags:
        - beneficial owners
      summary: Retrieve beneficial ownership status
      description: Retrieve beneficial ownership status
      operationId: getBeneficialOwnershipStatusForCustomer
      parameters:
        - name: id
          in: path
          description: Customer unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-ownership/components/schemas/BeneficialOwnershipResponse'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to get certification status.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: not_found
                  message:
                    type: string
                    example: Ownership certification status not found.
    post:
      tags:
        - beneficial owners
      summary: Certify beneficial ownership status
      description: certify beneficial ownership status
      operationId: certifyBeneficialOwnershipForCustomer
      parameters:
        - name: id
          in: path
          description: Customer unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for certifying beneficial ownership for a Customer
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1beneficial-ownership/components/schemas/BeneficialOwnershipResponse'
        '400':
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                code:
                  type: string
                  example: ValidationError
                message:
                  type: string
                  example: Validation error(s) present. See embedded errors list for more details.
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Forbidden from updating beneficial ownership status for this customer.
    components:
      schemas:
        BeneficialOwnershipResponse:
          title: BeneficialOwnershipResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            status:
              type: string
              example: uncertified
  '/customers/{id}/documents':
    get:
      tags:
        - documents
      summary: List documents for customer
      description: List documents for customer
      operationId: listForCustomer
      parameters:
        - name: id
          in: path
          description: customer unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1documents/components/schemas/ListCustomerDocumentsResponse'
    post:
      tags:
        - documents
      summary: Create a document for customer
      description: Create a document for customer
      operationId: createForCustomer
      parameters:
        - name: id
          in: path
          description: customer unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Upload a document for a customer.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documentType:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: document created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1customers~1%7Bid%7D~1documents/components/schemas/MaximumNumberOfResourcesSchema'
                  - $ref: '#/paths/~1customers~1%7Bid%7D~1documents/components/schemas/InvalidFileTypeSchema'
                  - $ref: '#/paths/~1customers~1%7Bid%7D~1documents/components/schemas/DuplicateResourceSchema'
        '403':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1customers~1%7Bid%7D~1documents/components/schemas/InvalidResourceStateSchema'
                  - $ref: '#/paths/~1customers~1%7Bid%7D~1documents/components/schemas/NotAuthorizedSchema'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Customer not found. Check CustomerId.
        '413':
          description: request entity too large
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: fileTooLarge
                  message:
                    type: string
                    example: Document requests are limited to 10 MiB.
    components:
      schemas:
        ListCustomerDocumentsResponse:
          title: ListCustomerDocumentsResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    $ref: '#/paths/~1documents~1%7Bid%7D/components/schemas/RetrieveDocumentResponse'
        MaximumNumberOfResourcesSchema:
          title: MaximumNumberOfResourcesSchema
          type: object
          properties:
            code:
              type: string
              example: maximumNumberOfResources
            message:
              type: string
              example: Max of four files upload allowed. Please wait for Dwolla to manually check the documents.
        InvalidFileTypeSchema:
          title: InvalidFileTypeSchema
          type: object
          properties:
            code:
              type: string
              example: invalidFileType
            message:
              type: string
              example: 'File types supported: Personal IDs - .jpg, .jpeg or .png. Business Documents - .jpg, .jpeg, .png, or .pdf.'
        DuplicateResourceSchema:
          title: DuplicateResourceSchema
          type: object
          properties:
            code:
              type: string
              example: duplicateResource
            message:
              type: string
              example: Document already exists. Follow the link to find the existing document for the Customer.
        InvalidResourceStateSchema:
          title: InvalidResourceStateSchema
          type: object
          properties:
            code:
              type: string
              example: invalidResourceState
            message:
              type: string
              example: Resource cannot be modified. Document creation not allowed for already verified Customers or non-verified Customer types.
        NotAuthorizedSchema:
          title: NotAuthorizedSchema
          type: object
          properties:
            code:
              type: string
              example: notAuthorized
            message:
              type: string
              example: Not authorized to create documents.
  '/beneficial-owners/{id}/documents':
    get:
      tags:
        - documents
      summary: List document for beneficial owner
      description: List document for beneficial owner
      operationId: listForBeneficialOwner
      parameters:
        - name: id
          in: path
          description: beneficial owner unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1documents/components/schemas/ListCustomerDocumentsResponse'
    post:
      tags:
        - documents
      summary: Create a document for beneficial owner
      description: Create a document for beneficial owner
      operationId: createForBeneficialOwner
      parameters:
        - name: id
          in: path
          description: beneficial owner unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Upload a document for a beneficial owner.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documentType:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: document created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
  '/documents/{id}':
    get:
      tags:
        - documents
      summary: Retrieve a document
      description: Retrieve a document
      operationId: get
      parameters:
        - name: id
          in: path
          description: Document unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1documents~1%7Bid%7D/components/schemas/RetrieveDocumentResponse'
    components:
      schemas:
        RetrieveDocumentResponse:
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            id:
              type: string
              example: 56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc
            status:
              type: string
              example: reviewed
            type:
              type: string
              example: passport
            created:
              type: string
              example: '2015-09-29T21:42:16.000Z'
            documentVerificationStatus:
              type: string
              example: rejected
            failureReason:
              type: string
              example: ScanDobMismatch
            allFailureReasons:
              type: array
              items:
                type: object
                properties:
                  reason:
                    type: string
                    example: ScanDobMismatch
                  description:
                    type: string
                    example: Scan DOB does not match DOB on account
  '/customrs/{id}/kba':
    post:
      tags:
        - kba
      summary: Initiate a KBA session
      description: Initiate a KBA session
      operationId: initiateForCustomer
      parameters:
        - name: id
          in: path
          description: The ID of the Customer for initiating a KBA session
          required: true
          schema:
            type: string
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '403':
          description: 403 Error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1customrs~1%7Bid%7D~1kba/components/schemas/InvalidResourceStateResponse'
                  - $ref: '#/paths/~1customrs~1%7Bid%7D~1kba/components/schemas/ForbiddenResponse'
        '404':
          description: 404 Error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    components:
      schemas:
        InvalidResourceStateResponse:
          title: InvalidResourceStateResponse
          type: object
          properties:
            code:
              type: string
              example: InvalidResourceState
            message:
              type: string
              example: Customer verification status is not valid for kba.
        ForbiddenResponse:
          title: ForbiddenResponse
          type: object
          properties:
            code:
              type: string
              example: Forbidden
            message:
              type: string
              example: The supplied credentials are not authorized for this resource. Not authorized to create KBA questions.
  '/kba/{id}':
    get:
      tags:
        - kba
      summary: Retrieve KBA Questions
      description: Retrieve KBA Questions
      operationId: get
      parameters:
        - name: id
          in: path
          description: The ID of the KBA session to retrieve questions for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      answer:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/kba/62dac6f3-bf8f-4961-9af8-428de8ecd9a4'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: kba
                  id:
                    type: string
                    example: 62dac6f3-bf8f-4961-9af8-428de8ecd9a4
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 2355953375
                        text:
                          type: string
                          example: In what county do you currently live?
                        answers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: 2687969295
                              text:
                                type: string
                                example: Pulaski
        '403':
          description: 403 Error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1kba~1%7Bid%7D/components/schemas/InvalidKbaSessionResponse'
                  - $ref: '#/paths/~1kba~1%7Bid%7D/components/schemas/ForbiddenResponse'
        '404':
          description: 404 Error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: KBA questions not found. Check KBA id.
    post:
      tags:
        - kba
      summary: Verify KBA Questions
      description: Verify KBA Questions
      operationId: verify
      parameters:
        - name: id
          in: path
          description: The id of the KBA session to verify questions for.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for verifying KBA questions
        content:
          application/json:
            schema:
              required:
                - answers
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: object
                    properties:
                      questionId:
                        type: string
                        example: 2355953375
                      answerId:
                        type: string
                        example: 2687969335
      responses:
        '200':
          description: created
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      customer:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/b5fd802d-d8c7-43ce-94a8-7c14485b7042'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: customer
                  verificationStatus:
                    type: string
                    example: verified
        '403':
          description: 403 Error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1kba~1%7Bid%7D/components/schemas/InvalidKbaSessionResponse'
                  - $ref: '#/paths/~1kba~1%7Bid%7D/components/schemas/ExpiredKbaSessionResponse'
        '404':
          description: 404 Error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: KBA session not found.
    components:
      schemas:
        InvalidKbaSessionResponse:
          title: InvalidResourceStateResponse
          type: object
          properties:
            code:
              type: string
              example: InvalidResourceState
            message:
              type: string
              example: The kba session is no longer valid.
        ForbiddenResponse:
          title: ForbiddenResponse
          type: object
          properties:
            code:
              type: string
              example: Forbidden
            message:
              type: string
              example: Not authorized to retrieve KBA questions.
        ExpiredKbaSessionResponse:
          title: ExpiredKbaSessionResponse
          type: object
          properties:
            code:
              type: string
              example: Forbidden
            message:
              type: string
              example: The kba session has expired.
  '/customers/{id}/funding-sources':
    get:
      tags:
        - funding sources
      summary: List customer funding sources
      description: List customer funding sources
      operationId: listForCustomer
      parameters:
        - name: id
          in: path
          description: Customer funding sources
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1funding-sources~1%7Bid%7D/components/schemas/RetrieveFundingSourceResponse'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to list funding sources.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Customer not found.
    post:
      tags:
        - funding sources
      summary: Create customer funding source for a Customer
      description: Create customer funding source for a Customer
      operationId: createCustomerFundingSource
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for creating a funding-source
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1customers~1%7Bid%7D~1funding-sources/components/requestBodies/CreateUnverifiedBank'
                - $ref: '#/paths/~1customers~1%7Bid%7D~1funding-sources/components/requestBodies/CreatePlaidBank'
                - $ref: '#/paths/~1customers~1%7Bid%7D~1funding-sources/components/requestBodies/CreateVAN'
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '400':
          description: validation error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: ValidationError
                  message:
                    type: string
                    example: 'Can be: Duplicate funding source or validation error. Authorization already associated to a funding source.'
        '403':
          oneOf:
            - $ref: '#/paths/~1customers~1%7Bid%7D~1funding-sources/components/schemas/NotAuthorizedToCreateFundingSourceSchema'
            - $ref: '#/paths/~1customers~1%7Bid%7D~1funding-sources/components/schemas/VANSNotEnabledSchema'
    components:
      schemas:
        OnDemandAuthorization:
          title: OnDemandAuthorization
          type: object
          properties:
            on-demand-authorization:
              type: object
              properties:
                href:
                  type: string
                  example: 'https://api-sandbox.dwolla.com/on-demand-authorizations/30e7c028-0bdf-e511-80de-0aa34a9b2388'
        ListCustomerFundingSourcesResponse:
          title: ListCustomerFundingSourcesResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            _embedded:
              type: object
              properties:
                funding-sources:
                  type: array
                  items:
                    $ref: '#/paths/~1funding-sources~1%7Bid%7D/components/schemas/RetrieveFundingSourceResponse'
        NotAuthorizedToCreateFundingSourceSchema:
          title: NotAuthorizedToCreateFundingSourceSchema
          type: object
          properties:
            code:
              type: string
              example: forbidden
            message:
              type: string
              example: Not authorized to create funding source.
        VANSNotEnabledSchema:
          title: VANSNotEnabledSchema
          type: object
          properties:
            code:
              type: string
              example: forbidden
            message:
              type: string
              example: Virtual account numbers are not enabled for this account.
      requestBodies:
        CreateUnverifiedBank:
          title: CreateUnverifiedBank
          description: Request body for creating an unverified bank funding source
          type: object
          required:
            - routingNumber
            - accountNumber
            - bankAccountType
            - name
          properties:
            _links:
              $ref: '#/paths/~1customers~1%7Bid%7D~1funding-sources/components/schemas/OnDemandAuthorization'
            routingNumber:
              type: string
              example: 222222226
            accountNumber:
              type: string
              example: 123456789
            bankAccountType:
              type: string
              example: checking
            name:
              type: string
              example: Jane Doe’s Checking
        CreatePlaidBank:
          title: CreatePlaidBank
          description: Request body for creating an Verified bank funding source using a Plaid token
          type: object
          required:
            - plaidToken
            - name
          properties:
            plaidToken:
              type: string
              example: processor-sandbox-161c86dd-d470-47e9-a741-d381c2b2cb6f
            name:
              type: string
              example: Jane Doe’s Checking
            _links:
              $ref: '#/paths/~1customers~1%7Bid%7D~1funding-sources/components/schemas/OnDemandAuthorization'
        CreateVAN:
          title: CreateVAN
          description: Request body for creating a Virtual Account Number (VAN)
          type: object
          required:
            - type
            - bankAccountType
            - name
          properties:
            type:
              type: string
              example: virtual
            bankAccountType:
              type: string
              example: checking
            name:
              type: string
              example: My First VAN
  '/customers/{id}/funding-sources-token':
    post:
      tags:
        - funding sources
      summary: Create a funding sources token for dwolla.js
      description: Create a funding sources token for dwolla.js
      operationId: createTokenForCustomer
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733/funding-sources-token'
                  token:
                    type: object
                    example: 4adF858jPeQ9RnojMHdqSD2KwsvmhO7Ti7cI5woOiBGCpH5krY
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Customer not found.
  '/customers/{id}/iav-token':
    post:
      tags:
        - funding sources
      summary: Create an IAV token for dwolla.js
      description: Create an IAV token for dwolla.js
      operationId: createIavTokenForCustomer
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733/iav-token'
                  token:
                    type: object
                    example: 4adF858jPeQ9RnojMHdqSD2KwsvmhO7Ti7cI5woOiBGCpH5krY
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Customer not found.
  '/customers/{id}/card-funding-sources-token':
    post:
      tags:
        - funding sources
      summary: Create a Card funding sources token for dwolla-cards.js
      description: Create a Card funding sources token for dwolla-cards.js
      operationId: createCardTokenForCustomer
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733/card-funding-sources-token'
                  token:
                    type: object
                    example: 4e6158394155554b4d74423975727475326a4b4f73436d73616e6c30597a6f61424a7249386545394e7149555533646d55623a41506e693176383545567167454e4d31355563683157675a
        '401':
          description: unauthorized
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: Application does not have required scopes for creating token.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Customer not found.
  '/funding-sources/{id}':
    get:
      tags:
        - funding sources
      summary: Retrieve a funding source
      description: Retrieve a funding source
      operationId: get
      parameters:
        - name: id
          in: path
          description: Funding source unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1funding-sources~1%7Bid%7D/components/schemas/RetrieveFundingSourceResponse'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Funding source not found.
    post:
      tags:
        - funding sources
      summary: Update or remove a funding source
      description: Update or remove a funding source
      operationId: updateOrRemove
      parameters:
        - name: id
          in: path
          description: Funding source unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters to update a customer funding source
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1funding-sources~1%7Bid%7D/components/requestBodies/UpdateUnverifiedBank'
                - $ref: '#/paths/~1funding-sources~1%7Bid%7D/components/requestBodies/UpdateVerifiedBank'
                - $ref: '#/paths/~1funding-sources~1%7Bid%7D/components/requestBodies/RemoveBank'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
        '400':
          description: validation error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: validationError
                  message:
                    type: string
                    example: Only funding sources of type="bank" can be updated.
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidResourceState
                  message:
                    type: string
                    example: A removed bank cannot be updated.
    components:
      schemas:
        RetrieveFundingSourceResponse:
          title: RetrieveFundingSourceResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            id:
              type: string
              example: 49dbaa24-1580-4b1c-8b58-24e26656fa31
            status:
              type: string
              example: verified
            type:
              type: string
              example: bank
            bankAccountType:
              type: string
              example: checking
            name:
              type: string
              example: Test Checking Account
            created:
              type: string
              example: '2017-09-26T14:14:08.000Z'
            removed:
              type: string
              example: false
            channels:
              type: array
              items:
                type: string
                example: ach
            bankName:
              type: string
              example: SANDBOX TEST BANK
            fingerprint:
              type: string
              example: 5012989b55af15400e8102f95d2ec5e7ce3aef45c01613280d80a236dd8d6c3a
      requestBodies:
        UpdateUnverifiedBank:
          title: UpdateUnverifiedBank
          description: Request body for updating information of an unverified bank funding source
          type: object
          required:
            - name
          properties:
            routingNumber:
              type: string
              example: 222222226
            accountNumber:
              type: string
              example: 123456789
            bankAccountType:
              type: string
              example: checking
            name:
              type: string
              example: Jane Doe’s Checking
        UpdateVerifiedBank:
          title: UpdateVerifiedBank
          description: Request body for updating information of a Verified bank funding source
          type: object
          required:
            - name
          properties:
            name:
              type: string
              example: Jane Doe’s Checking
        RemoveBank:
          title: RemoveBank
          description: Request body for removing a bank funding source
          type: object
          required:
            - removed
          properties:
            removed:
              type: boolean
              example: true
  '/funding-sources/{id}/micro-deposits':
    get:
      tags:
        - funding sources
      summary: Retrieve micro-deposits details
      description: Retrieve micro-deposits details
      operationId: getMicroDeposits
      parameters:
        - name: id
          in: path
          description: The ID of the FS that previously had micro-deposits initiated
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    additionalProperties:
                      $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                  created:
                    type: string
                    example: '2022-12-30T20:56:53.000Z'
                  status:
                    type: string
                    example: failed
                  failure:
                    type: object
                    properties:
                      code:
                        type: string
                        example: R03
                      description:
                        type: string
                        example: No Account/Unable to locate account
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    post:
      tags:
        - funding sources
      summary: Initiate or Verify micro-deposits
      description: Initiate or Verify micro-deposits
      operationId: initiateOrVerifyMicroDeposits
      parameters:
        - name: id
          in: path
          description: The ID of the FS to initiate or veriify micro-deposit
          required: true
          schema:
            type: string
      requestBody:
        description: null
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1funding-sources~1%7Bid%7D~1micro-deposits/components/requestBodies/InitiateMicroDeposits'
                - $ref: '#/paths/~1funding-sources~1%7Bid%7D~1micro-deposits/components/requestBodies/VerifyMicroDeposits'
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Funding source not found
    components:
      requestBodies:
        InitiateMicroDeposits:
          title: InitiateMicroDeposits
          description: Empty request body for initiating micro-deposits
          type: object
          nullable: true
        VerifyMicroDeposits:
          title: VerifyMicroDeposits
          description: Request body for verifying micro-deposits
          type: object
          required:
            - amount1
            - amount2
          properties:
            amount1:
              type: object
              required:
                - value
                - currency
              properties:
                value:
                  type: string
                  example: 0.02
                currency:
                  type: string
                  example: USD
            amount2:
              type: object
              required:
                - value
                - currency
              properties:
                value:
                  type: string
                  example: 0.03
                currency:
                  type: string
                  example: USD
  '/funding-sources/{id}/balance':
    get:
      tags:
        - funding sources
      summary: Retrieve funding source balance
      description: Retrieve funding source balance
      operationId: getBalance
      parameters:
        - name: id
          in: path
          description: ID of funding source to retrieve the balance for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    additionalProperties:
                      $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                  balance:
                    type: object
                    properties:
                      value:
                        type: string
                        example: '4616.87'
                      currency:
                        type: string
                        example: USD
                  total:
                    type: object
                    properties:
                      value:
                        type: string
                        example: '4616.87'
                      currency:
                        type: string
                        example: USD
                  lastUpdated:
                    type: string
                    example: '2017-04-18T15:20:25.880Z'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Funding source not found.
  '/funding-sources/{id}/ach-routing':
    get:
      tags:
        - funding sources
      summary: Retrieve account and routing numbers for a VAN (Virtual Account Number)
      description: Retrieve account and routing numbers for a VAN (Virtual Account Number)
      operationId: getAchRouting
      parameters:
        - name: id
          in: path
          description: ID of VAN funding source to retrieve ACH details
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    additionalProperties:
                      $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                  accountNumber:
                    type: string
                    example: '9619991490430833'
                  routingNumber:
                    type: string
                    example: 084106768
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Funding source not found.
  /transfers:
    post:
      tags:
        - transfers
      summary: Initiate a transfer
      description: Initiate a transfer
      operationId: initiate
      requestBody:
        description: Parameters to initiate a transfer
        content:
          application/json:
            schema:
              required:
                - _links
                - amount
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    source:
                      type: object
                      properties:
                        href:
                          type: string
                    destination:
                      type: object
                      properties:
                        href:
                          type: string
                amount:
                  title: TransferAmount
                  type: object
                  required:
                    - value
                    - currency
                  properties:
                    value:
                      type: string
                      example: '5.00'
                    currency:
                      type: string
                      example: USD
                metadata:
                  type: object
                fees:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        type: object
                        properties:
                          charge-to:
                            type: object
                            properties:
                              href:
                                type: string
                      amount:
                        type: object
                        properties:
                          amount:
                            type: string
                          currency:
                            type: string
                clearing:
                  type: object
                  properties:
                    source:
                      type: string
                    destination:
                      type: string
                achDetails:
                  type: object
                  properties:
                    source:
                      type: object
                      properties:
                        addenda:
                          type: object
                          properties:
                            values:
                              type: array
                              items:
                                type: string
                    destination:
                      type: object
                      properties:
                        addenda:
                          type: object
                          properties:
                            values:
                              type: array
                              items:
                                type: string
                rtpDetails:
                  type: object
                  properties:
                    destination:
                      type: object
                      properties:
                        remittanceData:
                          type: string
                correlationId:
                  type: string
                processingChannel:
                  type: object
                  properties:
                    destination:
                      type: string
                      example: real-time-payments
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1transfers/components/schemas/SourceNotFoundErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/ReceiverNotFoundErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidSourceFundingSourceErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/SenderRestrictedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/ReceiverRestrictedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidMetadataErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/OperationBlockedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidAmountLimitErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/CannotParseAmountErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InsufficientFundsErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/FacilitatorFeeAccountNotFoundErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/FacilitatorFeeSumTooLargeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/FacilitatorFeeBelowMinimumErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/HighRiskErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/IncompatibleHoldingsErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/DirectAccountWithoutBankErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/SourceSameAsDestinationErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidFacilitatorErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidFacilitatorFeeCollectFromErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidFacilitatorFeeCollectFromCombinationErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidDestinationFundingSourceErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidFacilitatorFeeAmountErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WeeklyReceiveLimitReachedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidDestinationClearingTypeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidAmountForDestinationClearingTypeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidCorrelationIdErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/SourceAddendaMaxLengthErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/DestinationAddendaMaxLengthErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/AchAddendaEntriesNotEnabledForAccountErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/PointOfSaleAddendaEntriesNotEnabledForAccountErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/IncompatibleAddendaEntriesErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidPointOfSaleAddendaIdentificationCodeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidPointOfSaleAddendaSerialNumberErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidPointOfSaleAddendaDateErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidPointOfSaleAddendaAddressErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidPointOfSaleAddendaCityErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidPointOfSaleAddendaStateErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/TransferExpiredForFeeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidFeeOdfiErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidSourceBankAccountTypeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidDestinationBankAccountTypeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/IncompatibleSourceAndDestinationTypesErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/IncompatibleSourceForRtpDestinationErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidAmountForDestinationProcessingChannelErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/RtpFacilitatorFeeNotSupportedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/RtpUnverifiedSenderNotSupportedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/RtpPersonalToPersonalNotSupportedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/DestinationProcessingChannelNotSupportedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/DestinationRemittanceDataMaxLengthErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawInvalidAmountErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawInvalidFundingSourceErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawAccountRestrictedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawInvalidAmountForClearingTypeErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawInvalidWireBeneficiaryLocalityErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawInvalidWireBeneficiaryRegionErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawInvalidWireBeneficiaryCountryErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawInvalidWireOriginatorToBeneficiaryErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawProcessingChannelNotSupportedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawRtpUnverifiedSenderNotSupportedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WithdrawRtpPersonalWithdrawalNotSupportedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/DepositAccountRestrictedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WireInvalidImadErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WireAccountRestrictedErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WireNotEnabledErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/WireAccountNotFoundErrorResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidAttemptToFacilitateFundsErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidAttemptToPayInFundsErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/InvalidAttemptToPayOutFundsErrorResponse'
                  - $ref: '#/paths/~1transfers/components/schemas/RtpAccountSettingNotEnabledErrorResponse'
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1transfers/components/schemas/TooManyRequestsErrorErrorResponse'
    components:
      schemas:
        SourceNotFoundErrorResponse:
          title: SourceNotFoundErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Funding source not found.
                      path:
                        type: string
                        example: /_links/source/href
                      _links:
                        type: object
                        example: {}
        ReceiverNotFoundErrorResponse:
          title: ReceiverNotFoundErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Receiver not found.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidSourceFundingSourceErrorResponse:
          title: InvalidSourceFundingSourceErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid funding source.
                      path:
                        type: string
                        example: /_links/source/href
                      _links:
                        type: object
                        example: {}
        SenderRestrictedErrorResponse:
          title: SenderRestrictedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Sender restricted.
                      path:
                        type: string
                        example: /_links/source/href
                      _links:
                        type: object
                        example: {}
        ReceiverRestrictedErrorResponse:
          title: ReceiverRestrictedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Receiver restricted.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidMetadataErrorResponse:
          title: InvalidMetadataErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid metadata.
                      path:
                        type: string
                        example: /metadata
                      _links:
                        type: object
                        example: {}
        OperationBlockedErrorResponse:
          title: OperationBlockedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Receiver cannot receive from sender.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidAmountLimitErrorResponse:
          title: InvalidAmountLimitErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid amount. The supplied amount is greater than your transaction limit.
                      path:
                        type: string
                        example: /amount/value
                      _links:
                        type: object
                        example: {}
        CannotParseAmountErrorResponse:
          title: CannotParseAmountErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Invalid amount. The supplied amount must be a positive number.
                      path:
                        type: string
                        example: /amount/value
                      _links:
                        type: object
                        example: {}
        InsufficientFundsErrorResponse:
          title: InsufficientFundsErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InsufficientFunds
                      message:
                        type: string
                        example: Insufficient funds.
                      path:
                        type: string
                        example: /_links/source/href
                      _links:
                        type: object
                        example: {}
        FacilitatorFeeAccountNotFoundErrorResponse:
          title: FacilitatorFeeAccountNotFoundErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Facilitator fee account not found.
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        FacilitatorFeeSumTooLargeErrorResponse:
          title: FacilitatorFeeSumTooLargeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Facilitator fee sum too large.
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        FacilitatorFeeBelowMinimumErrorResponse:
          title: FacilitatorFeeBelowMinimumErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Facilitator fee below minimum.
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        HighRiskErrorResponse:
          title: HighRiskErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: 'Due to account restrictions, we are unable to process this transaction.'
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        IncompatibleHoldingsErrorResponse:
          title: IncompatibleHoldingsErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Receiver cannot receive from sender.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        DirectAccountWithoutBankErrorResponse:
          title: DirectAccountWithoutBankErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: RequiresFundingSource
                      message:
                        type: string
                        example: Receiver requires funding source.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        SourceSameAsDestinationErrorResponse:
          title: SourceSameAsDestinationErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Receiver cannot be the owner of the source funding source.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidFacilitatorErrorResponse:
          title: InvalidFacilitatorErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Account cannot facilitate this transaction.
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        InvalidFacilitatorFeeCollectFromErrorResponse:
          title: InvalidFacilitatorFeeCollectFromErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Unable to charge fee to specified destination.
                      path:
                        type: string
                        example: /fees/_links/charge-to/href
                      _links:
                        type: object
                        example: {}
        InvalidFacilitatorFeeCollectFromCombinationErrorResponse:
          title: InvalidFacilitatorFeeCollectFromCombinationErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: 'Currently, all fees must be paid by same destination."'
                      path:
                        type: string
                        example: /fees/_links/charge-to/href
                      _links:
                        type: object
                        example: {}
        InvalidDestinationFundingSourceErrorResponse:
          title: InvalidDestinationFundingSourceErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid destination funding source.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidFacilitatorFeeAmountErrorResponse:
          title: InvalidFacilitatorFeeAmountErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid facilitator fee amount.
                      path:
                        type: string
                        example: /fees/_links/charge-to/href
                      _links:
                        type: object
                        example: {}
        WeeklyReceiveLimitReachedErrorResponse:
          title: WeeklyReceiveLimitReachedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Destination customer has reached its weekly receive limit.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidDestinationClearingTypeErrorResponse:
          title: InvalidDestinationClearingTypeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Destination clearing type is currently not enabled.
                      path:
                        type: string
                        example: /clearing/destination
                      _links:
                        type: object
                        example: {}
        InvalidAmountForDestinationClearingTypeErrorResponse:
          title: InvalidAmountForDestinationClearingTypeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Amount is above the allowed threshold for the specified destination clearing type.
                      path:
                        type: string
                        example: /amount/value
                      _links:
                        type: object
                        example: {}
        InvalidCorrelationIdErrorResponse:
          title: InvalidCorrelationIdErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Correlation id must be at least one character and up to 255 characters when supplied.
                      path:
                        type: string
                        example: /correlationId
                      _links:
                        type: object
                        example: {}
        SourceAddendaMaxLengthErrorResponse:
          title: SourceAddendaMaxLengthErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Ach addenda entries can be up to 80 characters when supplied.
                      path:
                        type: string
                        example: /achDetails/source/addenda/values
                      _links:
                        type: object
                        example: {}
        DestinationAddendaMaxLengthErrorResponse:
          title: DestinationAddendaMaxLengthErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Ach addenda entries can be up to 80 characters when supplied.
                      path:
                        type: string
                        example: /achDetails/destination/addenda/values
                      _links:
                        type: object
                        example: {}
        AchAddendaEntriesNotEnabledForAccountErrorResponse:
          title: AchAddendaEntriesNotEnabledForAccountErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Supplying ach addenda entries is currently not enabled.
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        PointOfSaleAddendaEntriesNotEnabledForAccountErrorResponse:
          title: PointOfSaleAddendaEntriesNotEnabledForAccountErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Supplying point of sale addenda entries is currently not enabled.
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        IncompatibleAddendaEntriesErrorResponse:
          title: IncompatibleAddendaEntriesErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Addenda must not include both 'values' and 'pointOfSale addenda
                      path:
                        type: string
                        example: /achDetails/source/addenda/pointOfSale
                      _links:
                        type: object
                        example: {}
        InvalidPointOfSaleAddendaIdentificationCodeErrorResponse:
          title: InvalidPointOfSaleAddendaIdentificationCodeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Identification code on a Point of Sale addenda entry is required and can be up to 6 characters.
                      path:
                        type: string
                        example: /achDetails/source/addenda/pointOfSale/identificationCode
                      _links:
                        type: object
                        example: {}
        InvalidPointOfSaleAddendaSerialNumberErrorResponse:
          title: InvalidPointOfSaleAddendaSerialNumberErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Serial number on a Point of Sale addenda entry is required and can be up to 6 characters.
                      path:
                        type: string
                        example: /achDetails/source/addenda/pointOfSale/serialNumber
                      _links:
                        type: object
                        example: {}
        InvalidPointOfSaleAddendaDateErrorResponse:
          title: InvalidPointOfSaleAddendaDateErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: 'Date on a Point of Sale addenda entry is required and should be ISO-8601 format: YYYY-MM-DD.'
                      path:
                        type: string
                        example: /achDetails/source/addenda/pointOfSale/date
                      _links:
                        type: object
                        example: {}
        InvalidPointOfSaleAddendaAddressErrorResponse:
          title: InvalidPointOfSaleAddendaAddressErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Address on a Point of Sale addenda entry is required and can be up to 27 characters.
                      path:
                        type: string
                        example: /achDetails/source/addenda/pointOfSale/address
                      _links:
                        type: object
                        example: {}
        InvalidPointOfSaleAddendaCityErrorResponse:
          title: InvalidPointOfSaleAddendaCityErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: City on a Point of Sale addenda entry is required and can be up to 15 characters.
                      path:
                        type: string
                        example: /achDetails/source/addenda/pointOfSale/city
                      _links:
                        type: object
                        example: {}
        InvalidPointOfSaleAddendaStateErrorResponse:
          title: InvalidPointOfSaleAddendaStateErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: State on a Point of Sale addenda entry is required and should be a valid 2-letter abbreviation.
                      path:
                        type: string
                        example: /achDetails/source/addenda/pointOfSale/state
                      _links:
                        type: object
                        example: {}
        TransferExpiredForFeeErrorResponse:
          title: TransferExpiredForFeeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Return fees can only be charged within 45 days of the original transfer's settlement date.
                      path:
                        type: string
                        example: /_links/failed-transfer/href
                      _links:
                        type: object
                        example: {}
        InvalidFeeOdfiErrorResponse:
          title: InvalidFeeOdfiErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Transfer ineligible.
                      path:
                        type: string
                        example: /_links/failed-transfer/href
                      _links:
                        type: object
                        example: {}
        InvalidSourceBankAccountTypeErrorResponse:
          title: InvalidBankAccountTypeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid bank account type
                      path:
                        type: string
                        example: /_links/source/href
                      _links:
                        type: object
                        example: {}
        InvalidDestinationBankAccountTypeErrorResponse:
          title: InvalidDestinationBankAccountTypeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid bank account type
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        IncompatibleSourceAndDestinationTypesErrorResponse:
          title: IncompatibleSourceAndDestinationTypesErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Card type funding sources can only accept payments directly from a balance
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        IncompatibleSourceForRtpDestinationErrorResponse:
          title: IncompatibleSourceForRtpDestinationErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Transfers using the Real Time Payments processing channel must be funded by a balance
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidAmountForDestinationProcessingChannelErrorResponse:
          title: InvalidAmountForDestinationProcessingChannelErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Amount is greater than the allowed threshold for the specified destination processing channel.
                      path:
                        type: string
                        example: /amount/value
                      _links:
                        type: object
                        example: {}
        RtpFacilitatorFeeNotSupportedErrorResponse:
          title: RtpFacilitatorFeeNotSupportedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Real Time Payments does not currently support facilitator fees
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        RtpUnverifiedSenderNotSupportedErrorResponse:
          title: RtpUnverifiedSenderNotSupportedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Real Time Payments does not currently support unverified senders
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        RtpPersonalToPersonalNotSupportedErrorResponse:
          title: RtpPersonalToPersonalNotSupportedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Real Time Payments does not currently support transfers between personal accounts
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        DestinationProcessingChannelNotSupportedErrorResponse:
          title: DestinationProcessingChannelNotSupportedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Destination funding source does not support processing channel
                      path:
                        type: string
                        example: /processingChannel/destination
                      _links:
                        type: object
                        example: {}
        DestinationRemittanceDataMaxLengthErrorResponse:
          title: DestinationRemittanceDataMaxLengthErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Remittance data entries can be up to 140 characters when supplied.
                      path:
                        type: string
                        example: /rtpDetails/destination/remittanceData
                      _links:
                        type: object
                        example: {}
        WithdrawInvalidAmountErrorResponse:
          title: WithdrawInvalidAmountErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Invalid amount.
                      path:
                        type: string
                        example: /amount/value
                      _links:
                        type: object
                        example: {}
        WithdrawInvalidFundingSourceErrorResponse:
          title: WithdrawInvalidFundingSourceErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Destination funding source is either removed or does not exist.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        WithdrawAccountRestrictedErrorResponse:
          title: WithdrawAccountRestrictedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Account or customer restricted.
                      path:
                        type: string
                        example: /_links/source/href
                      _links:
                        type: object
                        example: {}
        WithdrawInvalidAmountForClearingTypeErrorResponse:
          title: WithdrawInvalidAmountForClearingTypeErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Amount is above the allowed threshold for the specified clearing type.
                      path:
                        type: string
                        example: /amount/value
                      _links:
                        type: object
                        example: {}
        WithdrawInvalidWireBeneficiaryLocalityErrorResponse:
          title: WithdrawInvalidWireBeneficiaryLocalityErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: 'Beneficiary locality must not exceed 35 characters and contain only alphanumeric, white space, ''.'' or ''#'' characters.'
                      path:
                        type: string
                        example: /wireInstructions/beneficiaryLocality
                      _links:
                        type: object
                        example: {}
        WithdrawInvalidWireBeneficiaryRegionErrorResponse:
          title: WithdrawInvalidWireBeneficiaryRegionErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: 'Beneficiary region must not exceed 35 characters and contain only alphanumeric, white space, ''.'' or ''#'' characters.'
                      path:
                        type: string
                        example: /wireInstructions/beneficiaryRegion
                      _links:
                        type: object
                        example: {}
        WithdrawInvalidWireBeneficiaryCountryErrorResponse:
          title: WithdrawInvalidWireBeneficiaryCountryErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: 'Beneficiary country must not exceed 35 characters and contain only alphanumeric, white space, ''.'' or ''#'' characters.'
                      path:
                        type: string
                        example: /wireInstructions/beneficiaryCountry
                      _links:
                        type: object
                        example: {}
        WithdrawInvalidWireOriginatorToBeneficiaryErrorResponse:
          title: WithdrawInvalidWireOriginatorToBeneficiaryErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: 'Originator to beneficiary items must not exceed 35 characters and contain only alphanumeric, white space, ''.'' or ''#'' characters.'
                      path:
                        type: string
                        example: /wireInstructions/originatorToBeneficiary
                      _links:
                        type: object
                        example: {}
        WithdrawProcessingChannelNotSupportedErrorResponse:
          title: WithdrawProcessingChannelNotSupportedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Unsupported processing channel.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        WithdrawRtpUnverifiedSenderNotSupportedErrorResponse:
          title: WithdrawRtpUnverifiedSenderNotSupportedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Real Time Payments does not currently support unverified senders
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        WithdrawRtpPersonalWithdrawalNotSupportedErrorResponse:
          title: WithdrawRtpPersonalWithdrawalNotSupportedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Real Time Payments withdrawal from a personal account is currently not supported
                      path:
                        type: string
                        example: ''
                      _links:
                        type: object
                        example: {}
        DepositAccountRestrictedErrorResponse:
          title: DepositAccountRestrictedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Account is restricted.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        WireInvalidImadErrorResponse:
          title: WireInvalidImadErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Missing or invalid IMAD.
                      path:
                        type: string
                        example: /imad
                      _links:
                        type: object
                        example: {}
        WireAccountRestrictedErrorResponse:
          title: WireAccountRestrictedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Restricted
                      message:
                        type: string
                        example: Account or customer restricted.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        WireNotEnabledErrorResponse:
          title: WireNotEnabledErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Wire transfers are currently not enabled.
                      path:
                        type: string
                        example: /_links/source/href
                      _links:
                        type: object
                        example: {}
        WireAccountNotFoundErrorResponse:
          title: WireAccountNotFoundErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotFound
                      message:
                        type: string
                        example: Account or customer invalid.
                      path:
                        type: string
                        example: /_links/destination/href
                      _links:
                        type: object
                        example: {}
        InvalidAttemptToFacilitateFundsErrorResponse:
          title: InvalidAttemptToFacilitateFundsErrorResponse
          type: object
          properties:
            code:
              type: string
              example: Forbidden
            message:
              type: string
              example: 'Invalid Funds Flow: this operation requires the funds flow ''Facilitate'' to be enabled'
        InvalidAttemptToPayInFundsErrorResponse:
          title: InvalidAttemptToPayInFundsErrorResponse
          type: object
          properties:
            code:
              type: string
              example: Forbidden
            message:
              type: string
              example: 'Invalid Funds Flow: this operation requires the funds flow ''Receive'' to be enabled'
        InvalidAttemptToPayOutFundsErrorResponse:
          title: InvalidAttemptToPayOutFundsErrorResponse
          type: object
          properties:
            code:
              type: string
              example: Forbidden
            message:
              type: string
              example: 'Invalid Funds Flow: this operation requires the funds flow ''Send'' to be enabled'
        RtpAccountSettingNotEnabledErrorResponse:
          title: RtpAccountSettingNotEnabledErrorResponse
          type: object
          properties:
            code:
              type: string
              example: Forbidden
            message:
              type: string
              example: Real Time Payments not enabled for this account
        TooManyRequestsErrorErrorResponse:
          title: TooManyRequestsErrorErrorResponse
          type: object
          properties:
            code:
              type: string
              example: TooManyRequests
            message:
              type: string
              example: Concurrent transfers with the given funding source are not supported. Please wait a short period of time before re-attempting the request.
  '/transfers/{id}':
    get:
      tags:
        - transfers
      summary: Retrieve a transfer
      description: Retrieve a transfer
      operationId: get
      parameters:
        - name: id
          in: paths
          description: ID of transfer to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1transfers~1%7Bid%7D/components/schemas/RetrieveTransferResponse'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    post:
      tags:
        - transfers
      summary: Cancel a transfer
      description: Cancel a transfer
      operationId: cancel
      parameters:
        - name: id
          in: path
          description: ID of transfer
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters to cancel a transfer
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  example: cancelled
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
        '400':
          description: 400 Bad Request
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1customers/post/responses/400/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
                  - $ref: '#/paths/~1transfers~1%7Bid%7D/components/schemas/StatusInvalidErrorResponse'
                  - $ref: '#/paths/~1transfers~1%7Bid%7D/components/schemas/StatusNotAllowedErrorResponse'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    components:
      schemas:
        RetrieveTransferResponse:
          title: RetrieveTransferResponse
          type: object
          properties:
            _links:
              type: object
              additionalProperties:
                $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
            id:
              type: string
              example: 15c6bcce-46f7-e811-8112-e8dd3bececa8
            status:
              type: string
              example: pending
            amount:
              type: object
              properties:
                value:
                  type: string
                  example: '42.00'
                currency:
                  type: string
                  example: USD
            created:
              type: string
              example: '2018-12-03T22:00:22.970Z'
            clearing:
              type: object
              properties:
                source:
                  type: string
                  example: standard
                destination:
                  type: string
                  example: same-day
            metadata:
              type: object
              properties:
                paymentId:
                  type: string
                  example: '12345678'
                note:
                  type: string
                  example: Payment for completed work Dec. 1
            achDetails:
              type: object
              properties:
                source:
                  type: object
                  properties:
                    addenda:
                      type: object
                      properties:
                        values:
                          type: array
                          items:
                            type: string
                            example: ABC123_AddendaValue
                destination:
                  type: object
                  properties:
                    addenda:
                      type: object
                      properties:
                        values:
                          type: array
                          items:
                            type: string
                            eexample: ZYX987_AddendaValue
            rtpDetails:
              type: object
              properties:
                destination:
                  type: object
                  properties:
                    remittanceData:
                      type: string
                      example: ABC_123 Remittance Data
            correlationId:
              type: string
              example: 8a2cdc8d-629d-4a24-98ac-40b735229fe2
            processingChannel:
              type: object
              properties:
                destination:
                  type: string
                  example: real-time-payments
        StatusInvalidErrorResponse:
          title: StatusInvalidErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: Invalid
                      message:
                        type: string
                        example: Status invalid.
                      path:
                        type: string
                        example: /status
                      _links:
                        type: object
                        example: {}
        StatusNotAllowedErrorResponse:
          title: StatusNotAllowedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotAllowed
                      message:
                        type: string
                        example: Status not allowed.
                      path:
                        type: string
                        example: /status
                      _links:
                        type: object
                        example: {}
  '/customers/{id}/transfers':
    get:
      tags:
        - transfers
      summary: List and search transers for a customer
      description: List and search transers for a customer
      operationId: listForCustomer
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: 'A string to search on fields `firstName`, `lastName`, `email`, `businessName`'
          required: false
          schema:
            type: string
        - name: startAmount
          in: query
          description: Only include transactions with an amount equal to or greater than `startAmount`
          required: false
          schema:
            type: string
        - name: endAmount
          in: query
          description: Only include transactions with an amount equal to or less than `endAmount`
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: Only include transactions created after this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: Only include transactions created before this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: 'Filter on transaction status. Possible values are `pending`, `processed`, `failed`, or `cancelled`'
          required: false
          schema:
            type: string
        - name: correlationId
          in: query
          description: A string value to search on if `correlationId` was specified for a transaction
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of search results to return. Defaults to 25
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Number of search results to skip. Use for pagination
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    additionalProperties:
                      $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                  _embedded:
                    type: object
                    properties:
                      transfers:
                        type: array
                        items:
                          $ref: '#/paths/~1transfers~1%7Bid%7D/components/schemas/RetrieveTransferResponse'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
  '/transfers/{id}/fees':
    get:
      tags:
        - transfers
      summary: List fees for a transfer
      description: List fees for a transfer
      operationId: listFees
      parameters:
        - name: id
          in: path
          description: ID of transfer to retrieve fees for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        _links:
                          type: object
                          additionalProperties:
                            $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                        id:
                          type: string
                          example: 416a2857-c887-4cca-bd02-8c3f75c4bb0e
                        status:
                          type: string
                          example: pending
                        amount:
                          type: object
                          properties:
                            value:
                              type: string
                              example: '2.00'
                            currency:
                              type: string
                              example: USD
                        created:
                          type: string
                          example: '2016-02-22T20:46:38.777Z'
                  total:
                    type: string
                    example: '1'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
  '/transfers/{id}/failure':
    get:
      tags:
        - transfers
      summary: Retrieve a transfer failure reason
      description: Retrieve a transfer failure reason
      operationId: getFailureReason
      parameters:
        - name: id
          in: path
          description: Transfer unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    additionalProperties:
                      $ref: '#/paths/~1/components/schemas/RootResponse/properties/_links/additionalProperties'
                  code:
                    type: string
                    example: R03
                  description:
                    type: string
                    example: No Account/Unable to Locate Account
                  explanation:
                    type: string
                    example: The account number does not correspond to the individual identified in the entry or a valid account.
        '403':
          description: 403 Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1on-demand-authorizations/post/responses/403/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
  /on-demand-authorizations:
    post:
      tags:
        - transfers
      summary: Create an on-demand transfer authorization
      description: Create an on-demand transfer authorization
      operationId: create
      responses:
        '200':
          description: Ok
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1on-demand-authorizations/components/schemas/SuccessfulResponse'
        '403':
          description: 403 Error
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                title: ForbiddenErrorResponse
                description: Error response schema for 403 Forbidden
                type: object
                properties:
                  code:
                    type: string
                    example: Forbidden
                  message:
                    type: string
                    example: The supplied credentials are not authorized for this resource.
    components:
      schemas:
        SuccessfulResponse:
          title: SuccessfulResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/on-demand-authorizations/30e7c028-0bdf-e511-80de-0aa34a9b2388'
            bodyText:
              type: string
              example: 'I agree that future payments to Company ABC inc. will be processed by the Dwolla payment system from the selected account above. In order to cancel this authorization, I will change my payment settings within my Company ABC inc. account.'
            buttonText:
              type: string
              example: Agree & Continue
  /mass-payments:
    post:
      tags:
        - mass payments
      summary: Initiate a mass payment
      description: Initiate a mass payment
      operationId: initiate
      requestBody:
        description: Parameters for initiating a mass payment
        content:
          application/json:
            schema:
              required:
                - _links
                - items
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    source:
                      type: object
                      properties:
                        href:
                          type: string
                          example: 'https://api-sandbox.dwolla.com/funding-sources/707177c3-bf15-4e7e-b37c-55c3898d9bf4'
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        type: object
                        properties:
                          destination:
                            type: object
                            properties:
                              href:
                                type: string
                                example: 'https://api-sandbox.dwolla.com/funding-sources/9c7f8d57-cd45-4e7a-bf7a-914dbd6131db'
                      amount:
                        $ref: '#/paths/~1transfers/post/requestBody/content/application~1json/schema/properties/amount'
                      processingChannel:
                        type: object
                        properties:
                          destination:
                            type: string
                            example: real-time-payments
                      metadata:
                        type: object
                      clearing:
                        type: object
                        properties:
                          destination:
                            type: string
                            example: next-available
                      achDetails:
                        type: object
                        properties:
                          destination:
                            type: object
                            properties:
                              addenda:
                                type: object
                                properties:
                                  values:
                                    type: array
                                    items:
                                      type: string
                                      example: XYZ987_AddendaValue
                      correlationId:
                        type: string
                        example: ad6ca82d-59f7-45f0-a8d2-94c2cd4e8841
                status:
                  type: string
                  example: deferred
                achDetails:
                  type: object
                  properties:
                    source:
                      type: object
                      properties:
                        addenda:
                          type: object
                          properties:
                            values:
                              type: array
                              items:
                                type: string
                                example: ZYX987_AddendaValue
                clearing:
                  type: object
                  properties:
                    source:
                      type: string
                      example: next-available
                metadata:
                  type: object
                correlationId:
                  type: string
                  example: ad6ca82d-59f7-45f0-a8d2-94c2cd4e8841
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
  '/mass-payments/{id}':
    get:
      tags:
        - mass payments
      summary: Retrieve a mass payment
      description: Retrieve a mass payment
      operationId: get
      parameters:
        - name: id
          in: path
          description: Mass payment unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1mass-payments~1%7Bid%7D/components/schemas/RetrieveMassPaymentResponse'
    post:
      tags:
        - mass payments
      summary: Update a mass payment to process or cancel it
      description: Update a mass payment to process or cancel it
      operationId: update
      parameters:
        - name: id
          in: path
          description: ID of mass payment to update
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for updating a mass payment
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  example: pending
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1mass-payments~1%7Bid%7D/components/schemas/RetrieveMassPaymentResponse'
    components:
      schemas:
        RetrieveMassPaymentResponse:
          title: RetrieveMassPaymentResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563'
                source:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/funding-sources/707177c3-bf15-4e7e-b37c-55c3898d9bf4'
                items:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items'
            id:
              type: string
              example: eb467252-808c-4bc0-b86f-a5cd01454563
            status:
              type: string
              example: processing
            created:
              type: string
              example: '2016-03-18T19:44:16.000Z'
            metadata:
              type: object
  '/mass-payments/{id}/items':
    get:
      tags:
        - mass payments
      summary: List items for a mass payment
      description: List items for a mass payment
      operationId: listItems
      parameters:
        - name: id
          in: path
          description: Mass payment unique identifier
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by item status
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items'
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items?limit=25&offset=0'
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items?limit=25&offset=0'
                  _embedded:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/paths/~1mass-payment-items~1%7Bid%7D/components/schemas/RetrieveMassPaymanetItemResponse'
  '/mass-payment-items/{id}':
    get:
      tags:
        - mass payments
      summary: Retrieve mass payment item
      description: Retrieve mass payment item
      operationId: retrieveMassPaymentItem
      parameters:
        - name: id
          in: path
          description: ID of item to be retrieved in mass payment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1mass-payment-items~1%7Bid%7D/components/schemas/RetrieveMassPaymanetItemResponse'
    components:
      schemas:
        RetrieveMassPaymanetItemResponse:
          title: RetrieveMassPaymanetItemResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/mass-payment-items/c1c7d293-63ec-e511-80df-0aa34a9b2388'
                mass-payment:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563'
                destination:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/funding-sources/b442c936-1f87-465d-a4e2-a982164b26bd'
                transfer:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/transfers/fa3999db-41ed-e511-80df-0aa34a9b2388'
            id:
              type: string
              example: 2f845bc9-41ed-e511-80df-0aa34a9b2388
            status:
              type: string
              example: success
            amount:
              type: object
              properties:
                value:
                  type: string
                  example: 1
                currency:
                  type: string
                  example: USD
            metadata:
              type: object
              properties:
                item1:
                  type: string
                  example: item1
            processingChannel:
              type: object
              properties:
                destination:
                  type: string
                  example: real-time-payments
  '/customers/{id}/mass-payments':
    get:
      tags:
        - mass payments
      summary: List mass payments for customer
      description: List mass payments for customer
      operationId: listForCustomer
      parameters:
        - name: id
          in: path
          description: Customer ID to get mass payments for
          required: true
          schema:
            type: string
        - name: correlationId
          in: query
          description: A string value to search on if `correlationId` was specified for a transaction
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of search results to return. Defaults to 25
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Number of search results to skip. Use for pagination
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/39e21228-5958-4c4f-96fe-48a4bf11332d/mass-payments'
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/39e21228-5958-4c4f-96fe-48a4bf11332d/mass-payments?limit=25&offset=0'
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/39e21228-5958-4c4f-96fe-48a4bf11332d/mass-payments?limit=25&offset=0'
                  _embedded:
                    type: object
                    properties:
                      mass-payments:
                        type: array
                        items:
                          $ref: '#/paths/~1mass-payments~1%7Bid%7D/components/schemas/RetrieveMassPaymentResponse'
  '/labels/{id}':
    get:
      tags:
        - labels
      summary: Retrieve a label
      description: Retrieve a label
      operationId: retrieveLabel
      parameters:
        - name: id
          in: path
          description: Label unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1labels~1%7Bid%7D/components/schemas/RetrieveLabelResponse'
    delete:
      tags:
        - labels
      summary: Remove a label
      description: Remove a label
      operationId: remove
      parameters:
        - name: id
          in: path
          description: A label unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1labels~1%7Bid%7D/components/schemas/RetrieveLabelResponse'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidResourceState
                  message:
                    type: string
                    example: Amount must be zero to remove label.
    components:
      schemas:
        RetrieveLabelResponse:
          title: RetrieveLabelResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc'
                    type:
                      type: string
                      example: application/vnd.dwolla.v1.hal+json
                    resource-type:
                      type: string
                      example: label
                update:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc/ledger-entries'
                    type:
                      type: string
                      example: application/vnd.dwolla.v1.hal+json
                    resource-type:
                      type: string
                      example: ledger-entry
                ledger-entries:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc/ledger-entries'
                    type:
                      type: string
                      example: application/vnd.dwolla.v1.hal+json
                    resource-type:
                      type: string
                      example: ledger-entry
                customer:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb'
                    type:
                      type: string
                      example: application/vnd.dwolla.v1.hal+json
                    resource-type:
                      type: string
                      example: customer
            id:
              type: string
              example: 7e042ffe-e25e-40d2-b86e-748b98845ecc
            created:
              type: string
              example: 2022-05-15T22:19:09.635Z
            amount:
              type: object
              properties:
                value:
                  type: string
                  example: 10
                currency:
                  type: string
                  example: USD
  '/customers/{id}/labels':
    get:
      tags:
        - labels
      summary: List labels for a customer
      description: List labels for a customer
      operationId: listLabelsForCustomer
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
      responses:
        '200':
          description: success operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb/labels'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: label
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb/labels?limit=25&offset=0'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: label
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb/labels?limit=25&offset=0'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: label
                      customer:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: customer
                  _embedded:
                    type: object
                    properties:
                      labels:
                        type: array
                        items:
                          $ref: '#/paths/~1labels~1%7Bid%7D/components/schemas/RetrieveLabelResponse'
                  total:
                    type: integer
                    format: int32
                    example: 1
    post:
      tags:
        - labels
      summary: Create a label for a customer
      description: Create a label for a customer
      operationId: createForCustomer
      parameters:
        - name: id
          in: path
          description: ID of customer to create a label for
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters to create a customer label
        content:
          application/json:
            schema:
              required:
                - amount
              type: object
              properties:
                amount:
                  type: object
                  properties:
                    currency:
                      type: string
                      example: 12.34
                    value:
                      type: string
                      example: USD
      responses:
        '201':
          description: create
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
  '/labels/{id}/ledger-entries':
    get:
      tags:
        - labels
      summary: List label ledger entries
      description: List label ledger entries
      operationId: listLedgerEntries
      parameters:
        - name: id
          in: path
          description: A label unique identifier
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc/ledger-entries'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: ledger-entry
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc/ledger-entries?limit=25&offset=0'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: ledger-entry
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc/ledger-entries?limit=25&offset=0'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: ledger-entry
                  _embedded:
                    type: object
                    properties:
                      ledger-entries:
                        type: array
                        items:
                          $ref: '#/paths/~1ledger-entries~1%7Bid%7D/components/schemas/RetrieveLabelLedgerEntryResponse'
                  total:
                    type: integer
                    format: int32
                    example: 1
    post:
      tags:
        - labels
      summary: Create label ledger entries
      description: Create label ledger entries
      operationId: createLabelLedgerEntries
      parameters:
        - name: id
          in: path
          description: A label unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters to create label ledger entry
        content:
          application/json:
            schema:
              required:
                - amount
              type: object
              properties:
                amount:
                  type: object
                  properties:
                    value:
                      type: string
                    currency:
                      type: string
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
  '/ledger-entries/{id}':
    get:
      tags:
        - labels
      summary: Retrieve a label ledger entry
      description: Retrieve a label ledger entry
      operationId: getLedgerEntry
      parameters:
        - name: id
          in: path
          description: A label ledger entry unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1ledger-entries~1%7Bid%7D/components/schemas/RetrieveLabelLedgerEntryResponse'
    components:
      schemas:
        RetrieveLabelLedgerEntryResponse:
          title: RetrieveLabelLedgerEntryResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/ledger-entries/32d68709-62dd-43d6-a6df-562f4baec526'
                    type:
                      type: string
                      example: application/vnd.dwolla.v1.hal+json
                    resource-type:
                      type: string
                      example: ledger-entry
                label:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc'
                    type:
                      type: string
                      example: application/vnd.dwolla.v1.hal+json
                    resource-type:
                      type: string
                      example: label
            id:
              type: string
              example: 32d68709-62dd-43d6-a6df-562f4baec526
            amount:
              type: object
              properties:
                value:
                  type: string
                  example: -5
                currency:
                  type: string
                  example: USD
            created:
              type: string
              example: 2019-05-16T01:54:58.062Z
  /label-reallocations:
    post:
      tags:
        - labels
      summary: Create a label reallocation
      description: Create a label reallocation
      operationId: createReallocation
      requestBody:
        description: Parameters to create a label reallocation
        content:
          application/json:
            schema:
              required:
                - _links
                - amount
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    from:
                      type: object
                      properties:
                        href:
                          type: string
                          example: 'https://api-sandbox.dwolla.com/labels/c91c501c-f49b-48be-a93b-12b45e152d45'
                    to:
                      type: object
                      properties:
                        href:
                          type: string
                          example: 'https://api-sandbox.dwolla.com/labels/7e042ffe-e25e-40d2-b86e-748b98845ecc'
                amount:
                  type: object
                  properties:
                    currency:
                      type: string
                      example: '15.00'
                    value:
                      type: string
                      example: USD
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
  '/label-reallocations/{id}':
    get:
      tags:
        - labels
      summary: Retrieve a label reallocation
      description: Retrieve a label reallocation
      operationId: retrieveLabelLedgerEntry
      parameters:
        - name: id
          in: path
          description: Label reallocation unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/label-reallocations/fd36b78c-42f3-4e21-8efb-09196fccbd21'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: label-reallocation
                      to-ledger-entry:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/ledger-entries/d8a4bf7a-3fa0-48b9-873c-765d7375c59f'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: ledger-entry
                      from-ledger-entry:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/ledger-entries/f6a44994-b4da-48e3-bd10-d3a168e6a77d'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: ledger-entry
                  created:
                    type: string
                    example: 2022-05-16T13:41:31.036Z
  /events:
    get:
      tags:
        - events
      summary: List events
      description: List events
      operationId: list
      requestBody:
        description: Parameters to filter events
        content:
          application/json:
            type: object
            properties:
              limit:
                type: integer
              offset:
                type: integer
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/events'
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/events?limit=25&offset=0'
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/events?limit=25&offset=150'
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/events?limit=25&offset=25'
                  _embedded:
                    type: object
                    properties:
                      events:
                        type: array
                        items:
                          type: object
                          properties:
                            _links:
                              type: object
                              properties:
                                self:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: 'https://api-sandbox.dwolla.com/events/78e57644-56e4-4da2-b743-059479f2e80f'
                                resource:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: 'https://api-sandbox.dwolla.com/transfers/47CFDDB4-1E74-E511-80DB-0AA34A9B2388'
                                account:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: 'https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b'
                            id:
                              type: string
                              example: 78e57644-56e4-4da2-b743-059479f2e80f
                            created:
                              type: string
                              example: 2015-10-16T15:58:18.000Z
                            topic:
                              type: string
                              example: bank_transfer_created
                            resourceId:
                              type: string
                              example: 47CFDDB4-1E74-E511-80DB-0AA34A9B2388
                  total:
                    type: integer
                    format: int32
                    example: 3
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Resource not found.
  '/events/{id}':
    get:
      tags:
        - events
      summary: Retrieve events
      description: Retrieve events
      operationId: get
      parameters:
        - name: id
          in: paths
          description: ID of application event to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/events/81f6e13c-557c-4449-9331-da5c65e61095'
                      resource:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/transfers/09A166BC-1B74-E511-80DB-0AA34A9B2388'
                      account:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b'
                      customer:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/customers/07d59716-ef22-4fe6-98e8-f3190233dfb8'
                  id:
                    type: string
                    example: 81f6e13c-557c-4449-9331-da5c65e61095
                  created:
                    type: string
                    example: 2015-10-16T15:37:02.000Z
                  topic:
                    type: string
                    example: customer_transfer_created
                  resourceId:
                    type: string
                    example: 09A166BC-1B74-E511-80DB-0AA34A9B2388
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Application event not found.
  /webhook-subscriptions:
    get:
      tags:
        - webhook subscriptions
      summary: List webhook subscriptions
      description: List webhook subscriptions
      operationId: listWebhookSubscriptions
      responses:
        '200':
          description: sucessful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/webhook-subscriptions'
                  _embedded:
                    type: object
                    properties:
                      webhook-subscriptions:
                        type: array
                        items:
                          $ref: '#/paths/~1webhook-subscriptions~1%7Bid%7D/components/schemas/RetrieveWebhookSubscriptionResponse'
                  total:
                    type: integer
                    format: int32
                    example: 1
    post:
      tags:
        - webhook subscriptions
      summary: Create a webhook subscription
      description: Create a webhook subscription
      operationId: create
      requestBody:
        description: Parameters to create a webhook subscriptions
        content:
          application/json:
            schema:
              required:
                - url
                - secret
              type: object
              properties:
                url:
                  type: string
                  example: 'http://myapplication.com/webhooks'
                secret:
                  type: string
                  example: sshhhhhh
      responses:
        '201':
          description: create
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '400':
          description: Bad request
          headers: {}
          content:
            application/vnd.dwolla.v1.hal:
              schema:
                oneOf:
                  - $ref: '#/paths/~1webhook-subscriptions/components/schemas/InvalidUrlFormatErrorResponse'
                  - $ref: '#/paths/~1webhook-subscriptions/components/schemas/SecretTooLongErrorResponse'
                  - $ref: '#/paths/~1webhook-subscriptions/components/schemas/MaxSubscriptionsReachedErrorResponse'
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/vnd.dwolla.v1.hal:
              schema:
                $ref: '#/paths/~1webhook-subscriptions/components/schemas/TooManyRequestsErrorResponse'
    components:
      schemas:
        InvalidUrlFormatErrorResponse:
          title: InvalidUrlFormatErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Url must be a valid url.
                      path:
                        type: string
                        example: /url
                      _links:
                        type: object
                        example: {}
        MaxSubscriptionsReachedErrorResponse:
          title: MaxSubscriptionsReachedErrorResponse
          type: object
          properties:
            code:
              type: string
              example: MaxNumberOfResources
            message:
              type: string
              example: The maximum number of subscriptions has been reached.
        SecretTooLongErrorResponse:
          title: SecretTooLongErrorResponse
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
            _embedded:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidFormat
                      message:
                        type: string
                        example: Secret must be 128 or fewer characters.
                      path:
                        type: string
                        example: /secret
                      _links:
                        type: object
                        example: {}
        TooManyRequestsErrorResponse:
          title: TooManyRequestsErrorResponse
          type: object
          properties:
            code:
              type: string
              example: Too Many Requests
            message:
              type: string
              example: Please wait a short period of time before re-attempting the request.
  '/webhook-subscriptions/{id}':
    get:
      tags:
        - webhook subscriptions
      summary: Retrieve a webhook subscription
      description: Retrieve a webhook subscription
      operationId: get
      parameters:
        - name: id
          in: path
          description: Webhook subscription unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1webhook-subscriptions~1%7Bid%7D/components/schemas/RetrieveWebhookSubscriptionResponse'
    post:
      tags:
        - webhook subscriptions
      summary: Update a webhook subscription
      description: Update a webhook subscription
      operationId: update
      parameters:
        - name: id
          in: path
          description: Webhook unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters to update a webhook subscription
        content:
          application/json:
            schema:
              required:
                - paused
              type: object
              properties:
                paused:
                  type: boolean
                  example: true
      responses:
        '200':
          description: sucessful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1webhook-subscriptions~1%7Bid%7D/components/schemas/RetrieveWebhookSubscriptionResponse'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1customers/post/responses/400/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    delete:
      tags:
        - webhook subscriptions
      summary: Delete a webhook subscription
      description: Delete a webhook subscription
      operationId: delete
      parameters:
        - name: id
          in: path
          description: Webhook unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1webhook-subscriptions~1%7Bid%7D/components/schemas/RetrieveWebhookSubscriptionResponse'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    components:
      schemas:
        RetrieveWebhookSubscriptionResponse:
          title: RetrieveWebhookSubscriptionResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/webhook-subscriptions/077dfffb-4852-412f-96b6-0fe668066589'
                webhooks:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/webhook-subscriptions/077dfffb-4852-412f-96b6-0fe668066589/webhooks'
            id:
              type: string
              example: 077dfffb-4852-412f-96b6-0fe668066589
            url:
              type: string
              example: 'http://myapplication.com/webhooks'
            paused:
              type: boolean
              example: true
            created:
              type: string
              format: date-time
              example: 2022-10-28T16:20:47.000Z
  '/webhook-subscriptions/{id}/webhooks':
    get:
      tags:
        - webhook subscriptions
      summary: List webhooks for a webhook subscription
      description: List webhooks for a webhook subscription
      operationId: listWebhooks
      parameters:
        - name: id
          in: path
          description: Webhook subscription unique identifier
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: Only include webhooks created after this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: Only include webhooks created before this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
      responses:
        '200':
          description: sucessful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks'
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks?limit=25&offset=0'
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks?limit=25&offset=150'
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks?limit=25&offset=25'
                  _embedded:
                    type: object
                    properties:
                      webhooks:
                        type: array
                        items:
                          $ref: '#/paths/~1webhooks~1%7Bid%7D/components/schemas/RetrieveWebhookResponse'
                  total:
                    type: integer
                    format: int32
                    example: 1
  '/webhooks/{id}':
    get:
      tags:
        - webhooks
      summary: Retrieve a webhook
      description: Retrieve a webhook
      operationId: get
      parameters:
        - name: id
          in: path
          description: Webhook unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1webhooks~1%7Bid%7D/components/schemas/RetrieveWebhookResponse'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    components:
      schemas:
        RetrieveWebhookResponse:
          title: RetrieveWebhookResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8'
                subscription:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83'
                retry:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8/retries'
                event:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/events/03c7e14c-7f15-44a2-bcf7-83f2f7e95d50'
            id:
              type: string
              example: 9ece9660-aa34-41eb-80d7-0125d53b45e8
            topic:
              type: string
              example: transfer_created
            accountId:
              type: string
              example: ca32853c-48fa-40be-ae75-77b37504581b
            eventId:
              type: string
              example: 03c7e14c-7f15-44a2-bcf7-83f2f7e95d50
            subscriptionId:
              type: string
              example: a0943041-7a5c-4e8f-92de-b55711ef3a83
            attempts:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: d4d16621-c6b0-40cb-8dc3-0469fa9dc4e8
                  request:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: 2022-10-27T17:07:34.304Z
                      url:
                        type: string
                        example: 'https://myapp.runscope.net'
                      headers:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: X-Dwolla-Topic
                            value:
                              type: string
                              example: transfer_created
                      body:
                        type: string
                        example: 'id:03c7e14c-7f15-44a2-bcf7-83f2f7e95d50resourceId:81BA6F36-CD7C-E511-80DB-0AA34A9B2388topic:transfer_createdtimestamp:2022-10-27T17:07:34.207Z_links:self:href:https://api.dwolla.com/events/03c7e14c-7f15-44a2-bcf7-83f2f7e95d50account:href:https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581bresource:href:https://api.dwolla.com/transfers/81BA6F36-CD7C-E511-80DB-0AA34A9B2388'
                  response:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: 2022-10-27T17:07:34.308Z
                      headers:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Date
                            value:
                              type: string
                              example: 'Tue 27 Oct 2022 17:07:34 GMT'
                      statusCode:
                        type: integer
                        format: int32
                        example: 200
                      body:
                        type: string
                        example: 'body:id:03c7e14c-7f15-44a2-bcf7-83f2f7e95d50resourceId:81BA6F36-CD7C-E511-80DB-0AA34A9B2388topic:transfer_createdtimestamp:2022-10-27T17:07:34.207Z_links:self:href:https://api-sandbox.dwolla.com/events/03c7e14c-7f15-44a2-bcf7-83f2f7e95d50account:href:https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581bresource:href:https://api.dwolla.com/transfers/81BA6F36-CD7C-E511-80DB-0AA34A9B2388files:[]form:fragment:headers:Connection:[close]Content-Length:[453]Content-Type:[application/json; charset=UTF-8]Host:[myapp.runscope.net]User-Agent:[dwolla-webhooks/1.0]X-Dwolla-Topic:[transfer_created]X-Request-Signature:[bd93780bd7e1ad77ab821094aaa0f9e3dece5ee3]host:myapp.runscope.netmethod:POSTparams:path:/region:us5runscope_host:prod078.runscope.inscheme:httpssource:capturesource_ip:52.24.10.184timestamp:1.4459656543078682e+09url:https://myapp.runscope.net/'
  '/webhooks/{id}/retries':
    get:
      tags:
        - webhooks
      summary: List retries for a webhook
      description: List retries for a webhook
      operationId: listRetries
      parameters:
        - name: id
          in: path
          description: Webhook unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1webhooks~1%7Bid%7D~1retries/components/schemas/ListRetriesResponse'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    post:
      tags:
        - webhooks
      summary: Retry a webhook
      description: Retry a webhook
      operationId: retry
      parameters:
        - name: id
          in: path
          description: Webhook unique identifier
          required: true
          schema:
            type: string
      responses:
        '201':
          description: created
          headers:
            Location:
              $ref: '#/paths/~1customers/post/responses/201/headers/Location'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/paths/~1accounts~1%7Bid%7D/get/responses/404/content/application~1vnd.dwolla.v1.hal%2Bjson/schema'
    components:
      schemas:
        ListRetriesResponse:
          title: ListRetriesResponse
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api-sandbox.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8/retries'
            _embedded:
              type: object
              properties:
                retries:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        type: object
                        properties:
                          self:
                            type: object
                            properties:
                              href:
                                type: string
                                example: 'https://api-sandbox.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8/retries/5aa27a0f-cf99-418d-a3ee-67c0ff99a494'
                          webhook:
                            type: object
                            properties:
                              href:
                                type: string
                                example: 'https://api-sandbox.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8'
                      id:
                        type: string
                        example: 5aa27a0f-cf99-418d-a3ee-67c0ff99a494
                      timestamp:
                        type: string
                        example: 2022-11-02T17:43:26.000Z
            total:
              type: integer
              format: int32
              example: 1
  /exchange-partners:
    get:
      tags:
        - exchanges
      summary: List exchange partners
      description: List exchange partners
      operationId: listExchangePartners
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api.dwolla.com/exchange-partners'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange-partner
                  _embedded:
                    type: object
                    properties:
                      exchange-partners:
                        type: array
                        items:
                          type: object
                          properties:
                            _links:
                              type: object
                              properties:
                                self:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: 'https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4'
                                    type:
                                      type: string
                                      example: application/vnd.dwolla.v1.hal+json
                                    resource-type:
                                      type: string
                                      example: exchange-partner
                                funding-source:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: 'https://api.dwolla.com/funding-sources'
                                    type:
                                      type: string
                                      example: application/vnd.dwolla.v1.hal+json
                                    resource-type:
                                      type: string
                                      example: funding-source
                            id:
                              type: string
                              example: 292317ec-e252-47d8-93c3-2d128e037aa4
                            name:
                              type: string
                              example: Finicity
                            status:
                              type: string
                              example: active
                            created:
                              type: string
                              example: '2022-05-17T16:08:52.146Z'
                  total:
                    type: integer
                    format: int32
                    example: 2
  '/exchange-partners/{id}':
    get:
      tags:
        - exchanges
      summary: Retrieve exchange partner
      description: Retrieve exchange partner
      operationId: retrieveExchangePartner
      parameters:
        - name: id
          in: path
          description: Exchange Partner resource unique identifier.
          required: true
          schema:
            type: string
            example: 292317ec-e252-47d8-93c3-2d128e037aa4
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api.dwolla.com/exchange-partners/e5e9f2d3-a96c-4abd-a097-8ec7ae28aa8a'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange-partner
                      funding-source:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api.dwolla.com/funding-sources'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: funding-source
                  id:
                    type: string
                    example: e5e9f2d3-a96c-4abd-a097-8ec7ae28aa8a
                  name:
                    type: string
                    example: MX
                  status:
                    type: string
                    example: active
                  created:
                    type: string
                    example: '2022-08-30T19:31:59.106Z'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: The requested resource was not found.
  /exchanges:
    get:
      tags:
        - exchanges
      summary: List exchanges for an account
      description: List exchanges for an account
      operationId: listExchangesForAccount
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange
                      exchange-partner:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/exchange-partners/9b55a4b3-34ae-4607-b2d1-622f1eed77f9'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange-partner
                      id:
                        type: string
                        example: fcd15e5f-8d13-4570-a9b7-7fb49e55941d
                      status:
                        type: string
                        example: active
                      created:
                        type: string
                        example: '2022-10-21T21:41:03.283Z'
    post:
      tags:
        - exchanges
      summary: Create exchange for an account
      description: Create exchange for an account
      operationId: createExchangeForAccount
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1exchanges/components/schemas/FinicityCreateExchangeSchema'
                - $ref: '#/paths/~1exchanges/components/schemas/MXCreateExchangeSchema'
      responses:
        '201':
          description: Created
          headers:
            location:
              type: string
              example: 'https://api-sandbox.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d'
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - $ref: '#/paths/~1exchanges/components/schemas/InvalidExchangeTokenSchema'
                  - $ref: '#/paths/~1exchanges/components/schemas/InvalidExchangeSchema'
        '401':
          description: Invalid Scope
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidExchange
                  message:
                    type: string
                    example: The exchange is no longer active.
    components:
      schemas:
        FinicityCreateExchangeSchema:
          type: object
          properties:
            _links:
              type: object
              properties:
                exchange-partner:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4'
            finicity:
              type: object
              properties:
                profile:
                  type: integer
                  format: int32
                  example: 3
                version:
                  type: string
                  example: 1
                receiptId:
                  type: string
                  example: cr_4N47ou7SlppuIxq0ZUtACh10vYcloY
                receiptVersion:
                  type: string
                  example: 1
                customerId:
                  type: string
                  example: 5454874858510164000
                partnerId:
                  type: integer
                  format: int64
                  example: 2445583946651
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product:
                        type: string
                        example: moneyTransferDetails
                      accountId:
                        type: string
                        example: 1015199035827334900
                      accessPeriod:
                        type: object
                        properties:
                          type:
                            type: string
                            example: timeframe
                          startTime:
                            type: string
                            format: date
                            example: '2022-07-06'
                          endTime:
                            type: string
                            format: date-time
                            example: '2022-08-16T06:06:20Z'
                timestamp:
                  type: string
                  format: date-time
                  example: '2022-07-11T06:06:23Z'
        MXCreateExchangeSchema:
          type: object
          properties:
            _links:
              type: object
              properties:
                exchange-partner:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4'
            token:
              type: string
              example: someMXProcessorToken
        InvalidExchangeTokenSchema:
          type: object
          properties:
            code:
              type: string
              example: InvalidExchangeToken
            message:
              type: string
              example: Exchange token is expired.
        InvalidExchangeSchema:
          type: object
          properties:
            code:
              type: string
              example: InvalidExchange
            message:
              type: string
              example: The exchange is no longer active.
  '/exchanges/{id}':
    get:
      tags:
        - exchanges
      summary: Retrieve exchange resource
      description: Retrieve exchange resource
      operationId: retrieveExchangeResource
      parameters:
        - name: id
          in: path
          description: Exchange resource unique identifier.
          required: true
          schema:
            type: string
            example: 292317ec-e252-47d8-93c3-2d128e037aa4
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange
                      exchange-partner:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/exchange-partners/9b55a4b3-34ae-4607-b2d1-622f1eed77f9'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange-partner
                  id:
                    type: string
                    example: fcd15e5f-8d13-4570-a9b7-7fb49e55941d
                  status:
                    type: string
                    example: active
                  created:
                    type: string
                    example: '2022-10-21T21:41:03.283Z'
        '401':
          description: Invalid Scope
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidScope
                  message:
                    type: string
                    example: The scopes for retrieving an exchange resource is not enabled for this application. Reach out to Dwolla for more information.
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: The requested resource was not found. Check Exchange ID.
  '/customers/{id}/exchanges':
    get:
      tags:
        - exchanges
      summary: List exchanges for an customer
      description: List exchanges for an customer
      operationId: listExchangesForCustomer
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange
                      exchange-partners:
                        type: object
                        properties:
                          href:
                            type: string
                            example: 'https://api-sandbox.dwolla.com/exchange-partners/9b55a4b3-34ae-4607-b2d1-622f1eed77f9'
                          type:
                            type: string
                            example: application/vnd.dwolla.v1.hal+json
                          resource-type:
                            type: string
                            example: exchange-partner
                      id:
                        type: string
                        example: fcd15e5f-8d13-4570-a9b7-7fb49e55941d
                      status:
                        type: string
                        example: active
                      created:
                        type: string
                        example: '2022-10-21T21:41:03.283Z'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: Customer ID not found. Check Customer ID.
    post:
      tags:
        - exchanges
      summary: Create exchange for an customer
      description: Create exchange for an customer
      operationId: createExchangeForCustomer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/paths/~1customers~1%7Bid%7D~1exchanges/components/schemas/FinicityCreateExchangeSchema'
                - $ref: '#/paths/~1customers~1%7Bid%7D~1exchanges/components/schemas/MXCreateExchangeSchema'
      responses:
        '201':
          description: Created
          headers:
            location:
              type: string
              example: 'https://api-sandbox.dwolla.com/exchanges/fcd15e5f-8d13-4570-a9b7-7fb49e55941d'
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
        '400':
          description: Validation Error
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: ValidationError
                  message:
                    type: string
                    example: Validation error(s) present. See embedded errors list for more details.
        '401':
          description: Invalid Scope
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidScope
                  message:
                    type: string
                    example: Missing or invalid scopes for requested endpoint.
        '404':
          description: Not Found
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: The requested resource was not found.
    components:
      schemas:
        FinicityCreateExchangeSchema:
          type: object
          properties:
            _links:
              type: object
              properties:
                exchange-partner:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4'
            finicity:
              type: object
              properties:
                profile:
                  type: integer
                  format: int32
                  example: 3
                version:
                  type: string
                  example: 1
                receiptId:
                  type: string
                  example: cr_4N47ou7SlppuIxq0ZUtACh10vYcloY
                receiptVersion:
                  type: string
                  example: 1
                customerId:
                  type: string
                  example: 5454874858510164000
                partnerId:
                  type: integer
                  format: int64
                  example: 2445583946651
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product:
                        type: string
                        example: moneyTransferDetails
                      accountId:
                        type: string
                        example: 1015199035827334900
                      accessPeriod:
                        type: object
                        properties:
                          type:
                            type: string
                            example: timeframe
                          startTime:
                            type: string
                            format: date
                            example: '2022-07-06'
                          endTime:
                            type: string
                            format: date-time
                            example: '2022-08-16T06:06:20Z'
                timestamp:
                  type: string
                  format: date-time
                  example: '2022-07-11T06:06:23Z'
        MXCreateExchangeSchema:
          type: object
          properties:
            _links:
              type: object
              properties:
                exchange-partner:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4'
            token:
              type: string
              example: someMXProcessorToken
        InvalidExchangeTokenSchema:
          type: object
          properties:
            code:
              type: string
              example: InvalidExchangeToken
            message:
              type: string
              example: Exchange token is expired.
        InvalidExchangeSchema:
          type: object
          properties:
            code:
              type: string
              example: InvalidExchange
            message:
              type: string
              example: The exchange is no longer active.
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
